<!DOCTYPE html>
<html class="client-nojs" lang="zh-Hans-CN" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>堆栈 - 维基百科，自由的百科全书</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"zh","wgMonthNames":["","1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],"wgRequestId":"a0ba826f-77bf-4b44-907f-a0d41e4e5c98","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"堆栈","wgTitle":"堆栈","wgCurRevisionId":72272300,"wgRevisionId":72272300,"wgArticleId":85210,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["自2020年5月需补充来源的条目","拒绝当选首页新条目推荐栏目的条目","含有英語的條目","包含GND标识符的维基百科条目","带有伪代码示例的条目","数据结构","抽象数据类型"],"wgPageContentLanguage":"zh-cn","wgPageContentModel":"wikitext","wgRelevantPageName":"堆栈",
"wgRelevantArticleId":85210,"wgUserVariant":"zh-cn","wgIsProbablyEditable":true,"wgRelevantPageIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgVisualEditor":{"pageLanguageCode":"zh","pageLanguageDir":"ltr","pageVariantFallbacks":["zh-hans","zh-sg","zh-my"]},"wgMFDisplayWikibaseDescriptions":{"search":true,"nearby":true,"watchlist":true,"tagline":true},"wgWMESchemaEditAttemptStepOversample":false,"wgWMEPageLength":10000,"wgNoticeProject":"wikipedia","wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgPopupsFlags":10,"wgULSCurrentAutonym":"中文（中国大陆）","wgEditSubmitButtonLabelPublish":true,"wgCentralAuthMobileDomain":false,"wgULSPosition":"interlanguage","wgULSisCompactLinksEnabled":true,"wgWikibaseItemId":"Q177929","GEHomepageSuggestedEditsEnableTopics":true,"wgGETopicsMatchModeEnabled":false,"wgGEStructuredTaskRejectionReasonTextInputEnabled":false};RLSTATE={"ext.gadget.large-font":"ready","ext.globalCssJs.user.styles":"ready",
"site.styles":"ready","user.styles":"ready","ext.globalCssJs.user":"ready","user":"ready","user.options":"loading","ext.cite.styles":"ready","ext.math.styles":"ready","ext.pygments":"ready","skins.vector.styles.legacy":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.wikimediaBadges":"ready","ext.uls.interlanguage":"ready","wikibase.client.init":"ready"};RLPAGEMODULES=["ext.cite.ux-enhancements","ext.math.scripts","site","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js","mmv.head","mmv.bootstrap.autostart","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.eventLogging","ext.wikimediaEvents","ext.navigationTiming","ext.cx.eventlogging.campaigns","ext.centralNotice.geoIP","ext.centralNotice.startUp","ext.gadget.edit0","ext.gadget.WikiMiniAtlas","ext.gadget.ReferenceTooltips","ext.gadget.UnihanTooltips","ext.gadget.shortURL","ext.gadget.Difflink","ext.gadget.pseudonamespace-UI","ext.gadget.SpecialWikitext",
"ext.gadget.switcher","ext.gadget.AdvancedSiteNotices","ext.gadget.hideConversionTab","ext.gadget.internalLinkHelper-altcolor","ext.gadget.noteTA","ext.gadget.noteTAvector","ext.gadget.NavFrame","ext.gadget.collapsibleTables","ext.gadget.notifyConversion","ext.gadget.CollapsibleSidebar","ext.gadget.scrollUpButton","ext.centralauth.centralautologin","ext.popups","ext.uls.compactlinks","ext.uls.interface","ext.growthExperiments.SuggestedEditSession"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@12s5i",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});mw.user.options.set({"language":"zh-cn","variant":"zh-cn"});});});</script>
<link rel="stylesheet" href="/w/load.php?lang=zh-cn&amp;modules=ext.cite.styles%7Cext.math.styles%7Cext.pygments%2CwikimediaBadges%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cskins.vector.styles.legacy%7Cwikibase.client.init&amp;only=styles&amp;skin=vector"/>
<script async="" src="/w/load.php?lang=zh-cn&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="/w/load.php?lang=zh-cn&amp;modules=ext.gadget.large-font&amp;only=styles&amp;skin=vector"/>
<link rel="stylesheet" href="/w/load.php?lang=zh-cn&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.39.0-wmf.19"/>
<meta name="referrer" content="origin"/>
<meta name="referrer" content="origin-when-crossorigin"/>
<meta name="referrer" content="origin-when-cross-origin"/>
<meta name="format-detection" content="telephone=no"/>
<meta property="og:image" content="https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Data_stack.svg/1200px-Data_stack.svg.png"/>
<meta property="og:image:width" content="1200"/>
<meta property="og:image:height" content="862"/>
<meta property="og:image" content="https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Data_stack.svg/800px-Data_stack.svg.png"/>
<meta property="og:image:width" content="800"/>
<meta property="og:image:height" content="575"/>
<meta property="og:image" content="https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Data_stack.svg/640px-Data_stack.svg.png"/>
<meta property="og:image:width" content="640"/>
<meta property="og:image:height" content="460"/>
<meta name="viewport" content="width=1000"/>
<meta property="og:title" content="堆栈 - 维基百科，自由的百科全书"/>
<meta property="og:type" content="website"/>
<link rel="preconnect" href="//upload.wikimedia.org"/>
<link rel="alternate" media="only screen and (max-width: 720px)" href="//zh.m.wikipedia.org/wiki/%E5%A0%86%E6%A0%88"/>
<link rel="alternate" type="application/x-wiki" title="编辑本页" href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit"/>
<link rel="apple-touch-icon" href="/static/apple-touch/wikipedia.png"/>
<link rel="shortcut icon" href="/static/favicon/wikipedia.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (zh)"/>
<link rel="EditURI" type="application/rsd+xml" href="//zh.wikipedia.org/w/api.php?action=rsd"/>
<link rel="alternate" hreflang="zh" href="/zh/%E5%A0%86%E6%A0%88"/>
<link rel="alternate" hreflang="zh-Hans" href="/zh-hans/%E5%A0%86%E6%A0%88"/>
<link rel="alternate" hreflang="zh-Hant" href="/zh-hant/%E5%A0%86%E6%A0%88"/>
<link rel="alternate" hreflang="zh-Hans-CN" href="/zh-cn/%E5%A0%86%E6%A0%88"/>
<link rel="alternate" hreflang="zh-Hant-HK" href="/zh-hk/%E5%A0%86%E6%A0%88"/>
<link rel="alternate" hreflang="zh-Hant-MO" href="/zh-mo/%E5%A0%86%E6%A0%88"/>
<link rel="alternate" hreflang="zh-Hans-MY" href="/zh-my/%E5%A0%86%E6%A0%88"/>
<link rel="alternate" hreflang="zh-Hans-SG" href="/zh-sg/%E5%A0%86%E6%A0%88"/>
<link rel="alternate" hreflang="zh-Hant-TW" href="/zh-tw/%E5%A0%86%E6%A0%88"/>
<link rel="alternate" hreflang="x-default" href="/wiki/%E5%A0%86%E6%A0%88"/>
<link rel="license" href="https://creativecommons.org/licenses/by-sa/3.0/"/>
<link rel="canonical" href="https://zh.wikipedia.org/wiki/%E5%A0%86%E6%A0%88"/>
<link rel="dns-prefetch" href="//meta.wikimedia.org" />
<link rel="dns-prefetch" href="//login.wikimedia.org"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-堆栈 rootpage-堆栈 skin-vector action-view skin-vector-legacy"><div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice"><!-- CentralNotice --></div>
	<div class="mw-indicators">
	<div id="mw-indicator-noteTA-f3e2a619" class="mw-indicator"><div class="mw-parser-output"><img alt="本页使用了标题或全文手工转换" src="//upload.wikimedia.org/wikipedia/commons/thumb/c/cd/Zh_conversion_icon_m.svg/35px-Zh_conversion_icon_m.svg.png" decoding="async" title="本页使用了标题或全文手工转换" width="35" height="22" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/c/cd/Zh_conversion_icon_m.svg/53px-Zh_conversion_icon_m.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/c/cd/Zh_conversion_icon_m.svg/70px-Zh_conversion_icon_m.svg.png 2x" data-file-width="32" data-file-height="20" /></div></div>
	</div>
	<h1 id="firstHeading" class="firstHeading mw-first-heading" lang="zh-Hans-CN" dir="ltr">堆栈</h1>
	<div id="bodyContent" class="vector-body">
		<div id="siteSub" class="noprint">维基百科，自由的百科全书</div>
		<div id="contentSub" lang="zh-Hans-CN" dir="ltr"></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="#mw-head">跳到导航</a>
		<a class="mw-jump-link" href="#searchInput">跳到搜索</a>
		<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="zh-Hans-CN" dir="ltr"><div class="mw-parser-output"><table class="box-Refimprove plainlinks metadata ambox ambox-content" role="presentation"><tbody><tr><td class="mbox-image"><div style="width:52px"><a href="/wiki/File:Tango-nosources.svg" class="image"><img alt="Tango-nosources.svg" src="//upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Tango-nosources.svg/45px-Tango-nosources.svg.png" decoding="async" width="45" height="45" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Tango-nosources.svg/68px-Tango-nosources.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Tango-nosources.svg/90px-Tango-nosources.svg.png 2x" data-file-width="48" data-file-height="48" /></a></div></td><td class="mbox-text"><span class="mbox-text-span">此条目<b>需要补充更多<a href="/wiki/Wikipedia:%E5%88%97%E6%98%8E%E6%9D%A5%E6%BA%90" title="Wikipedia:列明来源">来源</a></b>。<span class="hide-when-compact"></span> <small class="date-container"><i>(<span class="date">2020年5月24日</span>)</i></small><span class="hide-when-compact"><br /><small>请协助补充多方面<a href="/wiki/Wikipedia:%E5%8F%AF%E9%9D%A0%E6%9D%A5%E6%BA%90" title="Wikipedia:可靠来源">可靠来源</a>以<a class="external text" href="https://zh.wikipedia.org/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit">改善这篇条目</a>，<a href="/wiki/Wikipedia:%E5%8F%AF%E4%BE%9B%E6%9F%A5%E8%AF%81" class="mw-redirect" title="Wikipedia:可供查证">无法查证</a>的内容可能会因为<a href="/wiki/Template:Fact" class="mw-redirect" title="Template:Fact">异议提出</a>而移除。<br />致使用者：请搜索一下条目的标题（来源搜索：<span class="plainlinks"><a rel="nofollow" class="external text" href="//www.google.com/search?&amp;as_eq=wikipedia&amp;q=%22%E5%A0%86%E6%A0%88%22">"堆栈"</a> &#8212; <a rel="nofollow" class="external text" href="//www.google.com/search?q=%22%E5%A0%86%E6%A0%88%22">网页</a>、<a rel="nofollow" class="external text" href="//www.google.com/search?tbm=nws&amp;q=&amp;as_src=-newswire+-wire+-presswire+-PR+-press+-release+-wikipedia&amp;q=%22%E5%A0%86%E6%A0%88%22">新闻</a>、<a rel="nofollow" class="external text" href="//books.google.com/books?&amp;as_brr=0&amp;as_pub=-icon&amp;q=%22%E5%A0%86%E6%A0%88%22">书籍</a>、<a rel="nofollow" class="external text" href="//scholar.google.com/scholar?&amp;q=%22%E5%A0%86%E6%A0%88%22">学术</a>、<a rel="nofollow" class="external text" href="//www.google.com/search?tbm=isch&amp;safe=off&amp;q=%22%E5%A0%86%E6%A0%88%22">图像</a></span>），以检查网络上是否存在该主题的更多可靠来源（<a href="/wiki/Wikipedia:%E5%8F%AF%E9%9D%A0%E6%9D%A5%E6%BA%90" title="Wikipedia:可靠来源">判定指引</a>）。</small></span><span class="hide-when-compact"></span></span></td></tr></tbody></table>
<div id="noteTA-f3e2a619" class="noteTA"><div class="noteTA-group"><div data-noteta-group-source="module" data-noteta-group="IT"></div></div></div>
<table class="infobox" cellspacing="3" style="border-spacing:3px;width:22em;text-align:left;font-size:small;line-height:1.5em;margin: 0 0 1em 1em; float: right;"><tbody><tr><th colspan="2" style="text-align:center;font-size:125%;font-weight:bold;background-color:#eee;">“堆栈”的各地常用别名</th></tr><tr><th scope="row" style="text-align:left;white-space: nowrap; background-color:#eee; width:4em;;">中国大陆</th><td style="white-space: nowrap; font-size: 1rem;;">堆栈、栈 </td></tr><tr><th scope="row" style="text-align:left;white-space: nowrap; background-color:#eee; width:4em;;">港台</th><td style="white-space: nowrap; font-size: 1rem;;">堆叠 </td></tr></tbody></table>
<div class="thumb tright"><div class="thumbinner" style="width:202px;"><a href="/wiki/File:Data_stack.svg" class="image"><img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/2/29/Data_stack.svg/200px-Data_stack.svg.png" decoding="async" width="200" height="144" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/2/29/Data_stack.svg/300px-Data_stack.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/2/29/Data_stack.svg/400px-Data_stack.svg.png 2x" data-file-width="391" data-file-height="281" /></a>  <div class="thumbcaption"><div class="magnify"><a href="/wiki/File:Data_stack.svg" class="internal" title="放大"></a></div>堆栈的简单示意图</div></div></div>
<p><b>堆栈</b>（英语：<span lang="en">stack</span>）又称为<b>栈</b>或<b>堆叠</b>，是<a href="/wiki/%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8" class="mw-redirect" title="计算机科学">计算机科学</a>中的一种<a href="/wiki/%E6%8A%BD%E8%B1%A1%E8%B3%87%E6%96%99%E5%9E%8B%E5%88%A5" title="抽象资料类型">抽象资料类型</a>，只允许在有序的线性资料集合的一端（称为堆栈顶端，英语：<span lang="en">top</span>）进行加入数据（英语：<span lang="en">push</span>）和移除数据（英语：<span lang="en">pop</span>）的运算。因而按照<a href="/w/index.php?title=%E5%BE%8C%E9%80%B2%E5%85%88%E5%87%BA%E6%BC%94%E7%AE%97%E6%B3%95&amp;action=edit&amp;redlink=1" class="new" title="后进先出算法（页面不存在）">后进先出</a>（LIFO, Last In First Out）的原理运作，堆栈常用一维<a href="/wiki/%E9%99%A3%E5%88%97" class="mw-redirect" title="数组">数组</a>或<a href="/wiki/%E9%80%A3%E7%B5%90%E4%B8%B2%E5%88%97" class="mw-redirect" title="链表">链表</a>来实现。常与另一种有序的线性资料集合<a href="/wiki/%E4%BD%87%E5%88%97" class="mw-redirect" title="队列">队列</a>相提并论。
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="zh-Hans-CN" dir="ltr"><h2 id="mw-toc-heading">目录</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#操作"><span class="tocnumber">1</span> <span class="toctext">操作</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#特点"><span class="tocnumber">2</span> <span class="toctext">特点</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#抽象定义"><span class="tocnumber">3</span> <span class="toctext">抽象定义</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#软件堆栈"><span class="tocnumber">4</span> <span class="toctext">软件堆栈</span></a>
<ul>
<li class="toclevel-2 tocsection-5"><a href="#陣列堆疊"><span class="tocnumber">4.1</span> <span class="toctext">阵列堆叠</span></a>
<ul>
<li class="toclevel-3 tocsection-6"><a href="#存储结构"><span class="tocnumber">4.1.1</span> <span class="toctext">存储结构</span></a></li>
<li class="toclevel-3 tocsection-7"><a href="#基本操作"><span class="tocnumber">4.1.2</span> <span class="toctext">基本操作</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-8"><a href="#串列堆疊"><span class="tocnumber">4.2</span> <span class="toctext">串列堆叠</span></a>
<ul>
<li class="toclevel-3 tocsection-9"><a href="#存储结构_2"><span class="tocnumber">4.2.1</span> <span class="toctext">存储结构</span></a></li>
<li class="toclevel-3 tocsection-10"><a href="#基本操作_2"><span class="tocnumber">4.2.2</span> <span class="toctext">基本操作</span></a></li>
<li class="toclevel-3 tocsection-11"><a href="#链表基本操作"><span class="tocnumber">4.2.3</span> <span class="toctext">链表基本操作</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-12"><a href="#硬件堆栈"><span class="tocnumber">5</span> <span class="toctext">硬件堆栈</span></a>
<ul>
<li class="toclevel-2 tocsection-13"><a href="#硬件支持"><span class="tocnumber">5.1</span> <span class="toctext">硬件支持</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-14"><a href="#堆疊的應用"><span class="tocnumber">6</span> <span class="toctext">堆叠的应用</span></a></li>
<li class="toclevel-1 tocsection-15"><a href="#参考文献"><span class="tocnumber">7</span> <span class="toctext">参考文献</span></a></li>
<li class="toclevel-1 tocsection-16"><a href="#参见"><span class="tocnumber">8</span> <span class="toctext">参见</span></a></li>
</ul>
</div>

<h2><span id=".E6.93.8D.E4.BD.9C"></span><span class="mw-headline" id="操作">操作</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit&amp;section=1" title="编辑章节：操作">编辑</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>堆栈使用两种基本操作：推入（压栈，push）和弹出（弹栈，pop）：
</p>
<ul><li>推入：将资料放入堆栈顶端，堆栈顶端移到新放入的资料。</li>
<li>弹出：将堆栈顶端资料移除，堆栈顶端移到移除后的下一笔资料。</li></ul>
<h2><span id=".E7.89.B9.E7.82.B9"></span><span class="mw-headline" id="特点">特点</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit&amp;section=2" title="编辑章节：特点">编辑</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>堆栈的基本特点：
</p>
<ol><li>先入后出，后入先出。</li>
<li>除头尾节点之外，每个元素有一个前驱，一个后继。</li></ol>
<h2><span id=".E6.8A.BD.E8.B1.A1.E5.AE.9A.E4.B9.89"></span><span class="mw-headline" id="抽象定义">抽象定义</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit&amp;section=3" title="编辑章节：抽象定义">编辑</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>以下是堆栈的VDM（<i><span class="ilh-all" data-orig-title="Vienna Development Method" data-lang-code="en" data-lang-name="英语" data-foreign-title="Vienna Development Method"><span class="ilh-page"><a href="/w/index.php?title=Vienna_Development_Method&amp;action=edit&amp;redlink=1" class="new" title="Vienna Development Method（页面不存在）">Vienna Development Method</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英语</span><span class="ilh-colon">：</span><span class="ilh-link"><a href="https://en.wikipedia.org/wiki/Vienna_Development_Method" class="extiw" title="en:Vienna Development Method"><span lang="en" dir="auto">Vienna Development Method</span></a></span>）</span></span></i>）：<sup id="cite_ref-1" class="reference"><a href="#cite_note-1">&#91;1&#93;</a></sup>
</p><p>函数签名：
</p>
<pre>  init: -&gt; Stack
  push: N x Stack -&gt; Stack
  top: Stack -&gt; (N <span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" alttext="{\textstyle \cup }">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="false" scriptlevel="0">
        <mo>&#x222A;<!-- ∪ --></mo>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\textstyle \cup }</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b414bffb1c967c5d5a74a7bc0891c9b9acd30efe" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -0.338ex; width:1.55ex; height:2.009ex;" alt="{\textstyle \cup }"/></span> ERROR)
  pop: Stack -&gt; Stack
  isempty: Stack -&gt; Boolean
</pre>
<p>此处的N代表某个元素（如自然数），而<span class="mwe-math-element"><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" alttext="{\textstyle \cup }">
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="false" scriptlevel="0">
        <mo>&#x222A;<!-- ∪ --></mo>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\textstyle \cup }</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b414bffb1c967c5d5a74a7bc0891c9b9acd30efe" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -0.338ex; width:1.55ex; height:2.009ex;" alt="{\textstyle \cup }"/></span>表示集合求并。
</p><p>语义：
</p>
<pre>  top(init()) = ERROR
  top(push(i,s)) = i
  pop(init()) = init()
  pop(push(i, s)) = s
  isempty(init()) = true
  isempty(push(i, s)) = false
</pre>
<h2><span id=".E8.BD.AF.E4.BB.B6.E5.A0.86.E6.A0.88"></span><span class="mw-headline" id="软件堆栈">软件堆栈</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit&amp;section=4" title="编辑章节：软件堆栈">编辑</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>堆栈可以用<a href="/wiki/%E6%95%B0%E7%BB%84" title="数组">数组</a>和<a href="/wiki/%E9%93%BE%E8%A1%A8" title="链表">链表</a>两种方式实现，一般为一个堆栈预先分配一个大小固定且较合适的空间并非难事，所以较流行的做法是<code>Stack</code>结构下含一个数组。如果空间实在紧张，也可用链表实现，且去掉<a href="/wiki/%E8%A1%A8%E5%A4%B4" class="mw-redirect" title="表头">表头</a>。
</p><p>这里的例程是以<a href="/wiki/C%E8%AA%9E%E8%A8%80" class="mw-redirect" title="C语言">C语言</a>实现的。
</p>
<h3><span id=".E9.99.A3.E5.88.97.E5.A0.86.E7.96.8A"></span><span class="mw-headline" id="陣列堆疊">数组堆栈</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit&amp;section=5" title="编辑章节：数组堆栈">编辑</a><span class="mw-editsection-bracket">]</span></span></h3>
<h4><span id=".E5.AD.98.E5.82.A8.E7.BB.93.E6.9E.84"></span><span class="mw-headline" id="存储结构">存储结构</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit&amp;section=6" title="编辑章节：存储结构">编辑</a><span class="mw-editsection-bracket">]</span></span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr mw-highlight-lines" dir="ltr"><pre><span></span><span class="linenos" data-line="1"></span><span class="cm">/* c3-1.h 栈的顺序存储表示 */</span><span class="w"></span>
<span class="linenos" data-line="2"></span><span class="cp">#define STACK_INIT_SIZE 10 </span><span class="cm">/* 存储空间初始分配量 */</span><span class="cp"></span>
<span class="linenos" data-line="3"></span><span class="cp">#define STACK_INCREMENT 2 </span><span class="cm">/* 存储空间分配增量 */</span><span class="cp"></span>
<span class="linenos" data-line="4"></span>
<span class="linenos" data-line="5"></span><span class="k">typedef</span><span class="w"> </span><span class="k">struct</span> <span class="nc">SqStack</span><span class="w"></span>
<span class="linenos" data-line="6"></span><span class="p">{</span><span class="w"></span>
<span class="linenos" data-line="7"></span><span class="w">	</span><span class="n">SElemType</span><span class="w"> </span><span class="o">*</span><span class="n">base</span><span class="p">;</span><span class="w"> </span><span class="cm">/* 在栈构造之前和销毁之后，base的值为NULL */</span><span class="w"></span>
<span class="linenos" data-line="8"></span><span class="w">	</span><span class="n">SElemType</span><span class="w"> </span><span class="o">*</span><span class="n">top</span><span class="p">;</span><span class="w"> </span><span class="cm">/* 栈顶指针 */</span><span class="w"></span>
<span class="linenos" data-line="9"></span><span class="w">	</span><span class="kt">int</span><span class="w"> </span><span class="n">stacksize</span><span class="p">;</span><span class="w"> </span><span class="cm">/* 当前已分配的存储空间，以元素为单位 */</span><span class="w"></span>
<span class="linenos" data-line="10"></span><span class="p">}</span><span class="n">SqStack</span><span class="p">;</span><span class="w"> </span><span class="cm">/* 顺序栈 */</span><span class="w"></span>
</pre></div>
<h4><span id=".E5.9F.BA.E6.9C.AC.E6.93.8D.E4.BD.9C"></span><span class="mw-headline" id="基本操作">基本操作</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit&amp;section=7" title="编辑章节：基本操作">编辑</a><span class="mw-editsection-bracket">]</span></span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr mw-highlight-lines" dir="ltr"><pre><span></span><span class="linenos" data-line="1"></span><span class="cm">/* bo3-1.c 顺序栈(存储结构由c3-1.h定义)的基本操作(9个) */</span><span class="w"></span>
<span class="linenos" data-line="2"></span><span class="kt">void</span><span class="w"> </span><span class="nf">InitStack</span><span class="p">(</span><span class="n">SqStack</span><span class="w"> </span><span class="o">*</span><span class="n">S</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="3"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 构造一个空栈S */</span><span class="w"></span>
<span class="linenos" data-line="4"></span><span class="w">	</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">base</span><span class="o">=</span><span class="p">(</span><span class="n">SElemType</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="n">STACK_INIT_SIZE</span><span class="o">*</span><span class="k">sizeof</span><span class="p">(</span><span class="n">SElemType</span><span class="p">));</span><span class="w"></span>
<span class="linenos" data-line="5"></span><span class="w">	</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">base</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="6"></span><span class="w">		</span><span class="n">exit</span><span class="p">(</span><span class="n">OVERFLOW</span><span class="p">);</span><span class="w"> </span><span class="cm">/* 存储分配失败 */</span><span class="w"></span>
<span class="linenos" data-line="7"></span><span class="w">	</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">top</span><span class="o">=</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">base</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="8"></span><span class="w">	</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">stacksize</span><span class="o">=</span><span class="n">STACK_INIT_SIZE</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="9"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="10"></span>
<span class="linenos" data-line="11"></span><span class="kt">void</span><span class="w"> </span><span class="nf">DestroyStack</span><span class="p">(</span><span class="n">SqStack</span><span class="w"> </span><span class="o">*</span><span class="n">S</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="12"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 销毁栈S，S不再存在 */</span><span class="w"></span>
<span class="linenos" data-line="13"></span><span class="w">	</span><span class="n">free</span><span class="p">((</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">base</span><span class="p">);</span><span class="w"></span>
<span class="linenos" data-line="14"></span><span class="w">	</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">base</span><span class="o">=</span><span class="nb">NULL</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="15"></span><span class="w">	</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">top</span><span class="o">=</span><span class="nb">NULL</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="16"></span><span class="w">	</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">stacksize</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="17"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="18"></span>
<span class="linenos" data-line="19"></span><span class="kt">void</span><span class="w"> </span><span class="nf">ClearStack</span><span class="p">(</span><span class="n">SqStack</span><span class="w"> </span><span class="o">*</span><span class="n">S</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="20"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 把S置为空栈 */</span><span class="w"></span>
<span class="linenos" data-line="21"></span><span class="w">	</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">top</span><span class="o">=</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">base</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="22"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="23"></span>
<span class="linenos" data-line="24"></span><span class="n">Status</span><span class="w"> </span><span class="nf">StackEmpty</span><span class="p">(</span><span class="n">SqStack</span><span class="w"> </span><span class="n">S</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="25"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 若栈S为空栈，则返回TRUE，否则返回FALSE */</span><span class="w"></span>
<span class="linenos" data-line="26"></span><span class="w">	</span><span class="k">if</span><span class="p">(</span><span class="n">S</span><span class="p">.</span><span class="n">top</span><span class="o">==</span><span class="n">S</span><span class="p">.</span><span class="n">base</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="27"></span><span class="w">		</span><span class="k">return</span><span class="w"> </span><span class="n">TRUE</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="28"></span><span class="w">	</span><span class="k">else</span><span class="w"></span>
<span class="linenos" data-line="29"></span><span class="w">		</span><span class="k">return</span><span class="w"> </span><span class="n">FALSE</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="30"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="31"></span>
<span class="linenos" data-line="32"></span><span class="kt">int</span><span class="w"> </span><span class="nf">StackLength</span><span class="p">(</span><span class="n">SqStack</span><span class="w"> </span><span class="n">S</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="33"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 返回S的元素个数，即栈的长度 */</span><span class="w"></span>
<span class="linenos" data-line="34"></span><span class="w">	</span><span class="k">return</span><span class="w"> </span><span class="n">S</span><span class="p">.</span><span class="n">top</span><span class="o">-</span><span class="n">S</span><span class="p">.</span><span class="n">base</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="35"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="36"></span>
<span class="linenos" data-line="37"></span><span class="n">Status</span><span class="w"> </span><span class="nf">GetTop</span><span class="p">(</span><span class="n">SqStack</span><span class="w"> </span><span class="n">S</span><span class="p">,</span><span class="n">SElemType</span><span class="w"> </span><span class="o">*</span><span class="n">e</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="38"></span><span class="p">{</span><span class="w"> </span><span class="cm">/* 若栈不空，则用e返回S的栈顶元素，并返回OK；否则返回ERROR */</span><span class="w"></span>
<span class="linenos" data-line="39"></span><span class="w">	</span><span class="k">if</span><span class="p">(</span><span class="n">S</span><span class="p">.</span><span class="n">top</span><span class="o">&gt;</span><span class="n">S</span><span class="p">.</span><span class="n">base</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="40"></span><span class="w">	</span><span class="p">{</span><span class="w"></span>
<span class="linenos" data-line="41"></span><span class="w">		</span><span class="o">*</span><span class="n">e</span><span class="o">=*</span><span class="p">(</span><span class="n">S</span><span class="p">.</span><span class="n">top</span><span class="mi">-1</span><span class="p">);</span><span class="w"></span>
<span class="linenos" data-line="42"></span><span class="w">		</span><span class="k">return</span><span class="w"> </span><span class="n">OK</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="43"></span><span class="w">	</span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="44"></span><span class="w">	</span><span class="k">else</span><span class="w"></span>
<span class="linenos" data-line="45"></span><span class="w">		</span><span class="k">return</span><span class="w"> </span><span class="n">ERROR</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="46"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="47"></span>
<span class="linenos" data-line="48"></span><span class="kt">void</span><span class="w"> </span><span class="nf">Push</span><span class="p">(</span><span class="n">SqStack</span><span class="w"> </span><span class="o">*</span><span class="n">S</span><span class="p">,</span><span class="n">SElemType</span><span class="w"> </span><span class="n">e</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="49"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 插入元素e为新的栈顶元素 */</span><span class="w"></span>
<span class="linenos" data-line="50"></span><span class="w">	</span><span class="k">if</span><span class="p">((</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">top</span><span class="o">-</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">base</span><span class="o">&gt;=</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">stacksize</span><span class="p">)</span><span class="w"> </span><span class="cm">/* 栈满，追加存储空间 */</span><span class="w"></span>
<span class="linenos" data-line="51"></span><span class="w">	</span><span class="p">{</span><span class="w"></span>
<span class="linenos" data-line="52"></span><span class="w">		</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">base</span><span class="o">=</span><span class="p">(</span><span class="n">SElemType</span><span class="w"> </span><span class="o">*</span><span class="p">)</span><span class="n">realloc</span><span class="p">((</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">base</span><span class="p">,((</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">stacksize</span><span class="o">+</span><span class="n">STACK_INCREMENT</span><span class="p">)</span><span class="o">*</span><span class="k">sizeof</span><span class="p">(</span><span class="n">SElemType</span><span class="p">));</span><span class="w"></span>
<span class="linenos" data-line="53"></span><span class="w">		</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">base</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="54"></span><span class="w">			</span><span class="n">exit</span><span class="p">(</span><span class="n">OVERFLOW</span><span class="p">);</span><span class="w"> </span><span class="cm">/* 存储分配失败 */</span><span class="w"></span>
<span class="linenos" data-line="55"></span><span class="w">		</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">top</span><span class="o">=</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">base</span><span class="o">+</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">stacksize</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="56"></span><span class="w">		</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">stacksize</span><span class="o">+=</span><span class="n">STACK_INCREMENT</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="57"></span><span class="w">	</span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="58"></span><span class="w">	</span><span class="o">*</span><span class="p">((</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">top</span><span class="p">)</span><span class="o">++=</span><span class="n">e</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="59"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="60"></span>
<span class="linenos" data-line="61"></span><span class="n">Status</span><span class="w"> </span><span class="nf">Pop</span><span class="p">(</span><span class="n">SqStack</span><span class="w"> </span><span class="o">*</span><span class="n">S</span><span class="p">,</span><span class="n">SElemType</span><span class="w"> </span><span class="o">*</span><span class="n">e</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="62"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 若栈不空，则删除S的栈顶元素，用e返回其值，并返回OK；否则返回ERROR */</span><span class="w"></span>
<span class="linenos" data-line="63"></span><span class="w">	</span><span class="k">if</span><span class="p">((</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">top</span><span class="o">==</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">base</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="64"></span><span class="w">		</span><span class="k">return</span><span class="w"> </span><span class="n">ERROR</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="65"></span><span class="w">	</span><span class="o">*</span><span class="n">e</span><span class="o">=*--</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">).</span><span class="n">top</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="66"></span><span class="w">		</span><span class="k">return</span><span class="w"> </span><span class="n">OK</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="67"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="68"></span>
<span class="linenos" data-line="69"></span><span class="kt">void</span><span class="w"> </span><span class="nf">StackTraverse</span><span class="p">(</span><span class="n">SqStack</span><span class="w"> </span><span class="n">S</span><span class="p">,</span><span class="kt">void</span><span class="p">(</span><span class="o">*</span><span class="n">visit</span><span class="p">)(</span><span class="n">SElemType</span><span class="p">))</span><span class="w"></span>
<span class="linenos" data-line="70"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 从栈底到栈顶依次对栈中每个元素调用函数visit() */</span><span class="w"></span>
<span class="linenos" data-line="71"></span><span class="w">	</span><span class="k">while</span><span class="p">(</span><span class="n">S</span><span class="p">.</span><span class="n">top</span><span class="o">&gt;</span><span class="n">S</span><span class="p">.</span><span class="n">base</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="72"></span><span class="w">		</span><span class="n">visit</span><span class="p">(</span><span class="o">*</span><span class="n">S</span><span class="p">.</span><span class="n">base</span><span class="o">++</span><span class="p">);</span><span class="w"></span>
<span class="linenos" data-line="73"></span><span class="w">	</span><span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span><span class="w"></span>
<span class="linenos" data-line="74"></span><span class="p">}</span><span class="w"></span>
</pre></div>
<p><sup id="cite_ref-#1_2-0" class="reference"><a href="#cite_note-#1-2">&#91;2&#93;</a></sup>
</p>
<h3><span id=".E4.B8.B2.E5.88.97.E5.A0.86.E7.96.8A"></span><span class="mw-headline" id="串列堆疊">串列堆栈</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit&amp;section=8" title="编辑章节：串列堆栈">编辑</a><span class="mw-editsection-bracket">]</span></span></h3>
<h4><span id=".E5.AD.98.E5.82.A8.E7.BB.93.E6.9E.84_2"></span><span class="mw-headline" id="存储结构_2">存储结构</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit&amp;section=9" title="编辑章节：存储结构">编辑</a><span class="mw-editsection-bracket">]</span></span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr mw-highlight-lines" dir="ltr"><pre><span></span><span class="linenos" data-line="1"></span><span class="cm">/* c2-2.h 线性表的单链表存储结构 */</span><span class="w"></span>
<span class="linenos" data-line="2"></span><span class="k">typedef</span><span class="w"> </span><span class="k">struct</span> <span class="nc">LNode</span><span class="w"></span>
<span class="linenos" data-line="3"></span><span class="p">{</span><span class="w"></span>
<span class="linenos" data-line="4"></span><span class="w">	</span><span class="n">ElemType</span><span class="w"> </span><span class="n">data</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="5"></span><span class="w">	</span><span class="k">struct</span> <span class="nc">LNode</span><span class="w"> </span><span class="o">*</span><span class="n">next</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="6"></span><span class="p">};</span><span class="w"></span>
<span class="linenos" data-line="7"></span><span class="k">typedef</span><span class="w"> </span><span class="k">struct</span> <span class="nc">LNode</span><span class="w"> </span><span class="o">*</span><span class="n">LinkList</span><span class="p">;</span><span class="w"> </span><span class="cm">/* 另一种定义LinkList的方法 */</span><span class="w"></span>
</pre></div>
<h4><span id=".E5.9F.BA.E6.9C.AC.E6.93.8D.E4.BD.9C_2"></span><span class="mw-headline" id="基本操作_2">基本操作</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit&amp;section=10" title="编辑章节：基本操作">编辑</a><span class="mw-editsection-bracket">]</span></span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr mw-highlight-lines" dir="ltr"><pre><span></span><span class="linenos" data-line="1"></span><span class="cm">/* bo3-5.c 链栈(存储结构由c2-2.h定义)的基本操作(4个) */</span><span class="w"></span>
<span class="linenos" data-line="2"></span><span class="cm">/* 部分基本操作是由bo2-8.cpp中的函数改名得来 */</span><span class="w"></span>
<span class="linenos" data-line="3"></span><span class="cm">/* 另一部分基本操作是由调用bo2-8.cpp中的函数(取特例)得来 */</span><span class="w"></span>
<span class="linenos" data-line="4"></span><span class="k">typedef</span><span class="w"> </span><span class="n">SElemType</span><span class="w"> </span><span class="n">ElemType</span><span class="p">;</span><span class="w"> </span><span class="cm">/* 栈结点类型和链表结点类型一致 */</span><span class="w"></span>
<span class="linenos" data-line="5"></span><span class="cp">#include</span><span class="cpf">&quot;c2-2.h&quot;</span><span class="c1"> /* 单链表存储结构 */</span><span class="cp"></span>
<span class="linenos" data-line="6"></span><span class="k">typedef</span><span class="w"> </span><span class="n">LinkList</span><span class="w"> </span><span class="n">LinkStack</span><span class="p">;</span><span class="w"> </span><span class="cm">/* LinkStack是指向栈结点的指针类型 */</span><span class="w"></span>
<span class="linenos" data-line="7"></span><span class="cp">#define InitStack InitList </span><span class="cm">/* InitStack()与InitList()作用相同，下同 */</span><span class="cp"></span>
<span class="linenos" data-line="8"></span><span class="cp">#define DestroyStack DestroyList</span>
<span class="linenos" data-line="9"></span><span class="cp">#define ClearStack ClearList</span>
<span class="linenos" data-line="10"></span><span class="cp">#define StackEmpty ListEmpty</span>
<span class="linenos" data-line="11"></span><span class="cp">#define StackLength ListLength</span>
<span class="linenos" data-line="12"></span><span class="cp">#include</span><span class="cpf">&quot;bo2-8.c&quot;</span><span class="c1"> /* 无头结点单链表的基本操作 */</span><span class="cp"></span>
<span class="linenos" data-line="13"></span>
<span class="linenos" data-line="14"></span><span class="n">Status</span><span class="w"> </span><span class="nf">GetTop</span><span class="p">(</span><span class="n">LinkStack</span><span class="w"> </span><span class="n">S</span><span class="p">,</span><span class="n">SElemType</span><span class="w"> </span><span class="o">*</span><span class="n">e</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="15"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 若栈不空，则用e返回S的栈顶元素，并返回OK；否则返回ERROR */</span><span class="w"></span>
<span class="linenos" data-line="16"></span><span class="w">	</span><span class="k">return</span><span class="w"> </span><span class="n">GetElem</span><span class="p">(</span><span class="n">S</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">e</span><span class="p">);</span><span class="w"></span>
<span class="linenos" data-line="17"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="18"></span>
<span class="linenos" data-line="19"></span><span class="n">Status</span><span class="w"> </span><span class="nf">Push</span><span class="p">(</span><span class="n">LinkStack</span><span class="w"> </span><span class="o">*</span><span class="n">S</span><span class="p">,</span><span class="n">SElemType</span><span class="w"> </span><span class="n">e</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="20"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 插入元素e为新的栈顶元素 */</span><span class="w"></span>
<span class="linenos" data-line="21"></span><span class="w">	</span><span class="k">return</span><span class="w"> </span><span class="n">ListInsert</span><span class="p">(</span><span class="n">S</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">e</span><span class="p">);</span><span class="w"></span>
<span class="linenos" data-line="22"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="23"></span>
<span class="linenos" data-line="24"></span><span class="n">Status</span><span class="w"> </span><span class="nf">Pop</span><span class="p">(</span><span class="n">LinkStack</span><span class="w"> </span><span class="o">*</span><span class="n">S</span><span class="p">,</span><span class="n">SElemType</span><span class="w"> </span><span class="o">*</span><span class="n">e</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="25"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 若栈不空，则删除S的栈顶元素，用e返回其值，并返回OK；否则返回ERROR */</span><span class="w"></span>
<span class="linenos" data-line="26"></span><span class="w">	</span><span class="k">return</span><span class="w"> </span><span class="n">ListDelete</span><span class="p">(</span><span class="n">S</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">e</span><span class="p">);</span><span class="w"></span>
<span class="linenos" data-line="27"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="28"></span>
<span class="linenos" data-line="29"></span><span class="kt">void</span><span class="w"> </span><span class="nf">StackTraverse</span><span class="p">(</span><span class="n">LinkStack</span><span class="w"> </span><span class="n">S</span><span class="p">,</span><span class="kt">void</span><span class="p">(</span><span class="o">*</span><span class="n">visit</span><span class="p">)(</span><span class="n">SElemType</span><span class="p">))</span><span class="w"></span>
<span class="linenos" data-line="30"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 从栈底到栈顶依次对栈中每个元素调用函数visit() */</span><span class="w"></span>
<span class="linenos" data-line="31"></span><span class="w">	</span><span class="n">LinkStack</span><span class="w"> </span><span class="n">temp</span><span class="p">,</span><span class="n">p</span><span class="o">=</span><span class="n">S</span><span class="p">;</span><span class="w"> </span><span class="cm">/* p指向栈顶元素 */</span><span class="w"></span>
<span class="linenos" data-line="32"></span><span class="w">	</span><span class="n">InitStack</span><span class="p">(</span><span class="o">&amp;</span><span class="n">temp</span><span class="p">);</span><span class="w"> </span><span class="cm">/* 初始化临时栈temp */</span><span class="w"></span>
<span class="linenos" data-line="33"></span><span class="w">	</span><span class="k">while</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="34"></span><span class="w">	</span><span class="p">{</span><span class="w"></span>
<span class="linenos" data-line="35"></span><span class="w">		</span><span class="n">Push</span><span class="p">(</span><span class="o">&amp;</span><span class="n">temp</span><span class="p">,</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">data</span><span class="p">);</span><span class="w"> </span><span class="cm">/* 由S栈顶到栈底，依次将栈元素入栈到temp栈 */</span><span class="w"></span>
<span class="linenos" data-line="36"></span><span class="w">		</span><span class="n">p</span><span class="o">=</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="37"></span><span class="w">	</span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="38"></span><span class="w">	</span><span class="n">ListTraverse</span><span class="p">(</span><span class="n">temp</span><span class="p">,</span><span class="n">visit</span><span class="p">);</span><span class="w"> </span><span class="cm">/* 遍历temp线性表 */</span><span class="w"></span>
<span class="linenos" data-line="39"></span><span class="p">}</span><span class="w"></span>
</pre></div>
<h4><span id=".E9.93.BE.E8.A1.A8.E5.9F.BA.E6.9C.AC.E6.93.8D.E4.BD.9C"></span><span class="mw-headline" id="链表基本操作">链表基本操作</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit&amp;section=11" title="编辑章节：链表基本操作">编辑</a><span class="mw-editsection-bracket">]</span></span></h4>
<div class="mw-highlight mw-highlight-lang-c mw-content-ltr mw-highlight-lines" dir="ltr"><pre><span></span><span class="linenos" data-line="1"></span><span class="cm">/* bo2-8.c 不带头结点的单链表(存储结构由c2-2.h定义)的部分基本操作(9个) */</span><span class="w"></span>
<span class="linenos" data-line="2"></span><span class="cp">#define DestroyList ClearList </span><span class="cm">/* DestroyList()和ClearList()的操作是一样的 */</span><span class="cp"></span>
<span class="linenos" data-line="3"></span><span class="kt">void</span><span class="w"> </span><span class="nf">InitList</span><span class="p">(</span><span class="n">LinkList</span><span class="w"> </span><span class="o">*</span><span class="n">L</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="4"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 操作结果：构造一个空的线性表L */</span><span class="w"></span>
<span class="linenos" data-line="5"></span><span class="w">	</span><span class="o">*</span><span class="n">L</span><span class="o">=</span><span class="nb">NULL</span><span class="p">;</span><span class="w"> </span><span class="cm">/* 指针为空 */</span><span class="w"></span>
<span class="linenos" data-line="6"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="7"></span>
<span class="linenos" data-line="8"></span><span class="kt">void</span><span class="w"> </span><span class="nf">ClearList</span><span class="p">(</span><span class="n">LinkList</span><span class="w"> </span><span class="o">*</span><span class="n">L</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="9"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 初始条件：线性表L已存在。操作结果：将L重置为空表 */</span><span class="w"></span>
<span class="linenos" data-line="10"></span><span class="w">	</span><span class="n">LinkList</span><span class="w"> </span><span class="n">p</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="11"></span><span class="w">	</span><span class="k">while</span><span class="p">(</span><span class="o">*</span><span class="n">L</span><span class="p">)</span><span class="w"> </span><span class="cm">/* L不空 */</span><span class="w"></span>
<span class="linenos" data-line="12"></span><span class="w">	</span><span class="p">{</span><span class="w"></span>
<span class="linenos" data-line="13"></span><span class="w">		</span><span class="n">p</span><span class="o">=*</span><span class="n">L</span><span class="p">;</span><span class="w"> </span><span class="cm">/* p指向首元结点 */</span><span class="w"></span>
<span class="linenos" data-line="14"></span><span class="w">		</span><span class="o">*</span><span class="n">L</span><span class="o">=</span><span class="p">(</span><span class="o">*</span><span class="n">L</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span><span class="w"> </span><span class="cm">/* L指向第2个结点(新首元结点) */</span><span class="w"></span>
<span class="linenos" data-line="15"></span><span class="w">		</span><span class="n">free</span><span class="p">(</span><span class="n">p</span><span class="p">);</span><span class="w"> </span><span class="cm">/* 释放首元结点 */</span><span class="w"></span>
<span class="linenos" data-line="16"></span><span class="w">	</span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="17"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="18"></span>
<span class="linenos" data-line="19"></span><span class="n">Status</span><span class="w"> </span><span class="nf">ListEmpty</span><span class="p">(</span><span class="n">LinkList</span><span class="w"> </span><span class="n">L</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="20"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 初始条件：线性表L已存在。操作结果：若L为空表，则返回TRUE，否则返回FALSE */</span><span class="w"></span>
<span class="linenos" data-line="21"></span><span class="w">	</span><span class="k">if</span><span class="p">(</span><span class="n">L</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="22"></span><span class="w">		</span><span class="k">return</span><span class="w"> </span><span class="n">FALSE</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="23"></span><span class="w">	</span><span class="k">else</span><span class="w"></span>
<span class="linenos" data-line="24"></span><span class="w">		</span><span class="k">return</span><span class="w"> </span><span class="n">TRUE</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="25"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="26"></span>
<span class="linenos" data-line="27"></span><span class="kt">int</span><span class="w"> </span><span class="nf">ListLength</span><span class="p">(</span><span class="n">LinkList</span><span class="w"> </span><span class="n">L</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="28"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 初始条件：线性表L已存在。操作结果：返回L中数据元素个数 */</span><span class="w"></span>
<span class="linenos" data-line="29"></span><span class="w">	</span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="30"></span><span class="w">	</span><span class="n">LinkList</span><span class="w"> </span><span class="n">p</span><span class="o">=</span><span class="n">L</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="31"></span><span class="w">	</span><span class="k">while</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="w"> </span><span class="cm">/* p指向结点(没到表尾) */</span><span class="w"></span>
<span class="linenos" data-line="32"></span><span class="w">	</span><span class="p">{</span><span class="w"></span>
<span class="linenos" data-line="33"></span><span class="w">		</span><span class="n">p</span><span class="o">=</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span><span class="w"> </span><span class="cm">/* p指向下一个结点 */</span><span class="w"></span>
<span class="linenos" data-line="34"></span><span class="w">		</span><span class="n">i</span><span class="o">++</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="35"></span><span class="w">	</span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="36"></span><span class="w">	</span><span class="k">return</span><span class="w"> </span><span class="n">i</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="37"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="38"></span>
<span class="linenos" data-line="39"></span><span class="n">Status</span><span class="w"> </span><span class="nf">GetElem</span><span class="p">(</span><span class="n">LinkList</span><span class="w"> </span><span class="n">L</span><span class="p">,</span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="n">ElemType</span><span class="w"> </span><span class="o">*</span><span class="n">e</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="40"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* L为不带头结点的单链表的头指针。当第i个元素存在时，其值赋给e并返回OK，否则返回ERROR */</span><span class="w"></span>
<span class="linenos" data-line="41"></span><span class="w">	</span><span class="kt">int</span><span class="w"> </span><span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="42"></span><span class="w">	</span><span class="n">LinkList</span><span class="w"> </span><span class="n">p</span><span class="o">=</span><span class="n">L</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="43"></span><span class="w">	</span><span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">1</span><span class="p">)</span><span class="w"> </span><span class="cm">/* i值不合法 */</span><span class="w"></span>
<span class="linenos" data-line="44"></span><span class="w">		</span><span class="k">return</span><span class="w"> </span><span class="n">ERROR</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="45"></span><span class="w">	</span><span class="k">while</span><span class="p">(</span><span class="n">j</span><span class="o">&lt;</span><span class="n">i</span><span class="o">&amp;&amp;</span><span class="n">p</span><span class="p">)</span><span class="w"> </span><span class="cm">/* 没到第i个元素，也没到表尾 */</span><span class="w"></span>
<span class="linenos" data-line="46"></span><span class="w">	</span><span class="p">{</span><span class="w"></span>
<span class="linenos" data-line="47"></span><span class="w">		</span><span class="n">j</span><span class="o">++</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="48"></span><span class="w">		</span><span class="n">p</span><span class="o">=</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="49"></span><span class="w">	</span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="50"></span><span class="w">	</span><span class="k">if</span><span class="p">(</span><span class="n">j</span><span class="o">==</span><span class="n">i</span><span class="p">)</span><span class="w"> </span><span class="cm">/* 存在第i个元素 */</span><span class="w"></span>
<span class="linenos" data-line="51"></span><span class="w">	</span><span class="p">{</span><span class="w"></span>
<span class="linenos" data-line="52"></span><span class="w">		</span><span class="o">*</span><span class="n">e</span><span class="o">=</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">data</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="53"></span><span class="w">		</span><span class="k">return</span><span class="w"> </span><span class="n">OK</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="54"></span><span class="w">	</span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="55"></span><span class="w">	</span><span class="k">else</span><span class="w"></span>
<span class="linenos" data-line="56"></span><span class="w">		</span><span class="k">return</span><span class="w"> </span><span class="n">ERROR</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="57"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="58"></span>
<span class="linenos" data-line="59"></span><span class="kt">int</span><span class="w"> </span><span class="nf">LocateElem</span><span class="p">(</span><span class="n">LinkList</span><span class="w"> </span><span class="n">L</span><span class="p">,</span><span class="n">ElemType</span><span class="w"> </span><span class="n">e</span><span class="p">,</span><span class="n">Status</span><span class="p">(</span><span class="o">*</span><span class="n">compare</span><span class="p">)(</span><span class="n">ElemType</span><span class="p">,</span><span class="n">ElemType</span><span class="p">))</span><span class="w"></span>
<span class="linenos" data-line="60"></span><span class="p">{</span><span class="w"> 	</span><span class="cm">/* 初始条件：线性表L已存在，compare()是数据元素判定函数(满足为1，否则为0) */</span><span class="w"></span>
<span class="linenos" data-line="61"></span><span class="w">	</span><span class="cm">/* 操作结果：返回L中第1个与e满足关系compare()的数据元素的位序。 */</span><span class="w"></span>
<span class="linenos" data-line="62"></span><span class="w">	</span><span class="cm">/*           若这样的数据元素不存在，则返回值为0 */</span><span class="w"></span>
<span class="linenos" data-line="63"></span><span class="w">	</span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="64"></span><span class="w">	</span><span class="n">LinkList</span><span class="w"> </span><span class="n">p</span><span class="o">=</span><span class="n">L</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="65"></span><span class="w">	</span><span class="k">while</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="66"></span><span class="w">	</span><span class="p">{</span><span class="w"></span>
<span class="linenos" data-line="67"></span><span class="w">		</span><span class="n">i</span><span class="o">++</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="68"></span><span class="w">		</span><span class="k">if</span><span class="p">(</span><span class="n">compare</span><span class="p">(</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">data</span><span class="p">,</span><span class="n">e</span><span class="p">))</span><span class="w"> </span><span class="cm">/* 找到这样的数据元素 */</span><span class="w"></span>
<span class="linenos" data-line="69"></span><span class="w">		</span><span class="k">return</span><span class="w"> </span><span class="n">i</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="70"></span><span class="w">		</span><span class="n">p</span><span class="o">=</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="71"></span><span class="w">	</span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="72"></span><span class="w">	</span><span class="k">return</span><span class="w"> </span><span class="mi">0</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="73"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="74"></span>
<span class="linenos" data-line="75"></span><span class="n">Status</span><span class="w"> </span><span class="nf">ListInsert</span><span class="p">(</span><span class="n">LinkList</span><span class="w"> </span><span class="o">*</span><span class="n">L</span><span class="p">,</span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="n">ElemType</span><span class="w"> </span><span class="n">e</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="76"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 在不带头结点的单链线性表L中第i个位置之前插入元素e */</span><span class="w"></span>
<span class="linenos" data-line="77"></span><span class="w">	</span><span class="kt">int</span><span class="w"> </span><span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="78"></span><span class="w">	</span><span class="n">LinkList</span><span class="w"> </span><span class="n">p</span><span class="o">=*</span><span class="n">L</span><span class="p">,</span><span class="n">s</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="79"></span><span class="w">	</span><span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">1</span><span class="p">)</span><span class="w"> </span><span class="cm">/* i值不合法 */</span><span class="w"></span>
<span class="linenos" data-line="80"></span><span class="w">		</span><span class="k">return</span><span class="w"> </span><span class="n">ERROR</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="81"></span><span class="w">	</span><span class="n">s</span><span class="o">=</span><span class="p">(</span><span class="n">LinkList</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="nc">LNode</span><span class="p">));</span><span class="w"> </span><span class="cm">/* 生成新结点 */</span><span class="w"></span>
<span class="linenos" data-line="82"></span><span class="w">	</span><span class="n">s</span><span class="o">-&gt;</span><span class="n">data</span><span class="o">=</span><span class="n">e</span><span class="p">;</span><span class="w"> </span><span class="cm">/* 给s的data域赋值 */</span><span class="w"></span>
<span class="linenos" data-line="83"></span><span class="w">	</span><span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span><span class="w"> </span><span class="cm">/* 插在表头 */</span><span class="w"></span>
<span class="linenos" data-line="84"></span><span class="w">	</span><span class="p">{</span><span class="w"></span>
<span class="linenos" data-line="85"></span><span class="w">		</span><span class="n">s</span><span class="o">-&gt;</span><span class="n">next</span><span class="o">=*</span><span class="n">L</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="86"></span><span class="w">		</span><span class="o">*</span><span class="n">L</span><span class="o">=</span><span class="n">s</span><span class="p">;</span><span class="w"> </span><span class="cm">/* 改变L */</span><span class="w"></span>
<span class="linenos" data-line="87"></span><span class="w">	</span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="88"></span><span class="w">	</span><span class="k">else</span><span class="w"></span>
<span class="linenos" data-line="89"></span><span class="w">	</span><span class="p">{</span><span class="w">	</span><span class="cm">/* 插在表的其余处 */</span><span class="w"></span>
<span class="linenos" data-line="90"></span><span class="w">		</span><span class="k">while</span><span class="p">(</span><span class="n">p</span><span class="o">&amp;&amp;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">i</span><span class="mi">-1</span><span class="p">)</span><span class="w"> </span><span class="cm">/* 寻找第i-1个结点 */</span><span class="w"></span>
<span class="linenos" data-line="91"></span><span class="w">		</span><span class="p">{</span><span class="w"></span>
<span class="linenos" data-line="92"></span><span class="w">			</span><span class="n">p</span><span class="o">=</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="93"></span><span class="w">			</span><span class="n">j</span><span class="o">++</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="94"></span><span class="w">		</span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="95"></span><span class="w">		</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">p</span><span class="p">)</span><span class="w"> </span><span class="cm">/* i大于表长+1 */</span><span class="w"></span>
<span class="linenos" data-line="96"></span><span class="w">			</span><span class="k">return</span><span class="w"> </span><span class="n">ERROR</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="97"></span><span class="w">		</span><span class="n">s</span><span class="o">-&gt;</span><span class="n">next</span><span class="o">=</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="98"></span><span class="w">		</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">next</span><span class="o">=</span><span class="n">s</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="99"></span><span class="w">	</span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="100"></span><span class="w">	</span><span class="k">return</span><span class="w"> </span><span class="n">OK</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="101"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="102"></span>
<span class="linenos" data-line="103"></span><span class="n">Status</span><span class="w"> </span><span class="nf">ListDelete</span><span class="p">(</span><span class="n">LinkList</span><span class="w"> </span><span class="o">*</span><span class="n">L</span><span class="p">,</span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="n">ElemType</span><span class="w"> </span><span class="o">*</span><span class="n">e</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="104"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 在不带头结点的单链线性表L中，删除第i个元素，并由e返回其值 */</span><span class="w"></span>
<span class="linenos" data-line="105"></span><span class="w">	</span><span class="kt">int</span><span class="w"> </span><span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="106"></span><span class="w">	</span><span class="n">LinkList</span><span class="w"> </span><span class="n">p</span><span class="o">=*</span><span class="n">L</span><span class="p">,</span><span class="n">q</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="107"></span><span class="w">	</span><span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span><span class="w"> </span><span class="cm">/* 删除第1个结点 */</span><span class="w"></span>
<span class="linenos" data-line="108"></span><span class="w">	</span><span class="p">{</span><span class="w"></span>
<span class="linenos" data-line="109"></span><span class="w">		</span><span class="o">*</span><span class="n">L</span><span class="o">=</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span><span class="w"> </span><span class="cm">/* L由第2个结点开始 */</span><span class="w"></span>
<span class="linenos" data-line="110"></span><span class="w">		</span><span class="o">*</span><span class="n">e</span><span class="o">=</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">data</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="111"></span><span class="w">		</span><span class="n">free</span><span class="p">(</span><span class="n">p</span><span class="p">);</span><span class="w"> </span><span class="cm">/* 删除并释放第1个结点 */</span><span class="w"></span>
<span class="linenos" data-line="112"></span><span class="w">	</span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="113"></span><span class="w">	</span><span class="k">else</span><span class="w"></span>
<span class="linenos" data-line="114"></span><span class="w">	</span><span class="p">{</span><span class="w"></span>
<span class="linenos" data-line="115"></span><span class="w">		</span><span class="k">while</span><span class="p">(</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">next</span><span class="o">&amp;&amp;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">i</span><span class="mi">-1</span><span class="p">)</span><span class="w"> </span><span class="cm">/* 寻找第i个结点，并令p指向其前驱 */</span><span class="w"></span>
<span class="linenos" data-line="116"></span><span class="w">		</span><span class="p">{</span><span class="w"></span>
<span class="linenos" data-line="117"></span><span class="w">			</span><span class="n">p</span><span class="o">=</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="118"></span><span class="w">			</span><span class="n">j</span><span class="o">++</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="119"></span><span class="w">		</span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="120"></span><span class="w">		</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">next</span><span class="o">||</span><span class="n">j</span><span class="o">&gt;</span><span class="n">i</span><span class="mi">-1</span><span class="p">)</span><span class="w"> </span><span class="cm">/* 删除位置不合理 */</span><span class="w"></span>
<span class="linenos" data-line="121"></span><span class="w">			</span><span class="k">return</span><span class="w"> </span><span class="n">ERROR</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="122"></span><span class="w">		</span><span class="n">q</span><span class="o">=</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span><span class="w"> </span><span class="cm">/* 删除并释放结点 */</span><span class="w"></span>
<span class="linenos" data-line="123"></span><span class="w">		</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">next</span><span class="o">=</span><span class="n">q</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="124"></span><span class="w">		</span><span class="o">*</span><span class="n">e</span><span class="o">=</span><span class="n">q</span><span class="o">-&gt;</span><span class="n">data</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="125"></span><span class="w">		</span><span class="n">free</span><span class="p">(</span><span class="n">q</span><span class="p">);</span><span class="w"></span>
<span class="linenos" data-line="126"></span><span class="w">	</span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="127"></span><span class="w">	</span><span class="k">return</span><span class="w"> </span><span class="n">OK</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="128"></span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="129"></span>
<span class="linenos" data-line="130"></span><span class="kt">void</span><span class="w"> </span><span class="nf">ListTraverse</span><span class="p">(</span><span class="n">LinkList</span><span class="w"> </span><span class="n">L</span><span class="p">,</span><span class="kt">void</span><span class="p">(</span><span class="o">*</span><span class="n">vi</span><span class="p">)(</span><span class="n">ElemType</span><span class="p">))</span><span class="w"></span>
<span class="linenos" data-line="131"></span><span class="p">{</span><span class="w">	</span><span class="cm">/* 初始条件：线性表L已存在。操作结果：依次对L的每个数据元素调用函数vi() */</span><span class="w"></span>
<span class="linenos" data-line="132"></span><span class="w">	</span><span class="n">LinkList</span><span class="w"> </span><span class="n">p</span><span class="o">=</span><span class="n">L</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="133"></span><span class="w">	</span><span class="k">while</span><span class="p">(</span><span class="n">p</span><span class="p">)</span><span class="w"></span>
<span class="linenos" data-line="134"></span><span class="w">	</span><span class="p">{</span><span class="w"></span>
<span class="linenos" data-line="135"></span><span class="w">		</span><span class="n">vi</span><span class="p">(</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">data</span><span class="p">);</span><span class="w"></span>
<span class="linenos" data-line="136"></span><span class="w">		</span><span class="n">p</span><span class="o">=</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span><span class="w"></span>
<span class="linenos" data-line="137"></span><span class="w">	</span><span class="p">}</span><span class="w"></span>
<span class="linenos" data-line="138"></span><span class="w">	</span><span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span><span class="w"></span>
<span class="linenos" data-line="139"></span><span class="p">}</span><span class="w"></span>
</pre></div>
<p><sup id="cite_ref-#1_2-1" class="reference"><a href="#cite_note-#1-2">&#91;2&#93;</a></sup>
堆栈有时候也常用来指代<a href="/wiki/%E5%A0%86%E6%A0%88%E6%AE%B5" title="堆栈段">堆栈段</a>。
</p>
<h2><span id=".E7.A1.AC.E4.BB.B6.E5.A0.86.E6.A0.88"></span><span class="mw-headline" id="硬件堆栈">硬件堆栈</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit&amp;section=12" title="编辑章节：硬件堆栈">编辑</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>架构层次上的堆栈通常被用以申请和访问内存。
</p>
<h3><span id=".E7.A1.AC.E4.BB.B6.E6.94.AF.E6.8C.81"></span><span class="mw-headline" id="硬件支持">硬件支持</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit&amp;section=13" title="编辑章节：硬件支持">编辑</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>大多数<a href="/wiki/CPU" class="mw-redirect" title="CPU">CPU</a>都有用作堆栈指针的寄存器。
</p>
<h2><span id=".E5.A0.86.E7.96.8A.E7.9A.84.E6.87.89.E7.94.A8"></span><span class="mw-headline" id="堆疊的應用">堆栈的应用</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit&amp;section=14" title="编辑章节：堆栈的应用">编辑</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul><li><a href="/wiki/%E5%9B%9E%E6%BA%AF%E6%B3%95" title="回溯法">回溯</a></li>
<li><a href="/wiki/%E9%80%92%E5%BD%92" title="递归">递归</a></li>
<li><a href="/wiki/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2" title="深度优先搜索">深度优先搜索</a></li></ul>
<h2><span id=".E5.8F.82.E8.80.83.E6.96.87.E7.8C.AE"></span><span class="mw-headline" id="参考文献">参考文献</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit&amp;section=15" title="编辑章节：参考文献">编辑</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="reflist" style="list-style-type: decimal;">
<ol class="references">
<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text">Jones: "Systematic Software Development Using VDM"</span>
</li>
<li id="cite_note-#1-2"><span class="mw-cite-backlink">^ <a href="#cite_ref-#1_2-0"><sup><b>2.0</b></sup></a> <a href="#cite_ref-#1_2-1"><sup><b>2.1</b></sup></a></span> <span class="reference-text"> <cite class="citation book">高一凡. 《数据结构》算法实现及解析 2004年10月第2版. 西安: 西安电子科技大学出版社. <a href="/wiki/Special:%E7%BD%91%E7%BB%9C%E4%B9%A6%E6%BA%90/9787560611761" title="Special:网络书源/9787560611761"><span title="国际标准书号">ISBN</span>&#160;9787560611761</a> <span style="font-family: sans-serif; cursor: default; color:#555; font-size: 0.8em; bottom: 0.1em; font-weight: bold;" title="连接到中文网页">（中文）</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fzh.wikipedia.org%3A%E5%A0%86%E6%A0%88&amp;rft.au=%E9%AB%98%E4%B8%80%E5%87%A1&amp;rft.btitle=%E3%80%8A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%8B%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0%E5%8F%8A%E8%A7%A3%E6%9E%90&amp;rft.edition=2004%E5%B9%B410%E6%9C%88%E7%AC%AC2%E7%89%88&amp;rft.genre=book&amp;rft.isbn=9787560611761&amp;rft.place=%E8%A5%BF%E5%AE%89&amp;rft.pub=%E8%A5%BF%E5%AE%89%E7%94%B5%E5%AD%90%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6%E5%87%BA%E7%89%88%E7%A4%BE&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span> </span>
</li>
</ol></div>
<h2><span id=".E5.8F.82.E8.A7.81"></span><span class="mw-headline" id="参见">参见</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit&amp;section=16" title="编辑章节：参见">编辑</a><span class="mw-editsection-bracket">]</span></span></h2>
<div role="navigation" aria-label="Portals" class="noprint portal plainlist tright" style="margin:0.5em 0 0.5em 1em;border:solid #aaa 1px">
<ul style="display:table;box-sizing:border-box;padding:0.1em;max-width:175px;background:#f9f9f9;font-size:85%;line-height:110%;font-weight:bold">
<li style="display:table-row"><span style="display:table-cell;padding:0.2em;vertical-align:middle;text-align:center"><img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/f/fd/Portal-puzzle.svg/32px-Portal-puzzle.svg.png" decoding="async" width="32" height="28" class="noviewer" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/f/fd/Portal-puzzle.svg/48px-Portal-puzzle.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/f/fd/Portal-puzzle.svg/64px-Portal-puzzle.svg.png 2x" data-file-width="32" data-file-height="28" /></span><span style="display:table-cell;padding:0.2em 0.2em 0.2em 0.3em;vertical-align:middle"><a href="/wiki/Portal:%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6" class="mw-redirect" title="Portal:计算机科学">计算机科学主题</a></span></li></ul></div>
<ul><li><a href="/wiki/%E9%80%A3%E7%B5%90%E4%B8%B2%E5%88%97" class="mw-redirect" title="链表">链表</a></li>
<li><a href="/wiki/%E4%BD%87%E5%88%97" class="mw-redirect" title="队列">队列</a></li></ul>
<div style="clear: both; height: 1em"></div>
<table cellspacing="0" class="navbox" style="border-spacing:0"><tbody><tr><td style="padding:2px"><table cellspacing="0" class="nowraplinks hlist collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit"><tbody><tr><th scope="col" class="navbox-title" colspan="2"><div class="plainlinks hlist navbar mini"><ul><li class="nv-view"><a href="/wiki/Template:Data_structures" title="Template:Data structures"><abbr title="查看该模板" style=";;background:none transparent;border:none;">查</abbr></a></li><li class="nv-talk"><a href="/wiki/Template_talk:Data_structures" title="Template talk:Data structures"><abbr title="讨论该模板" style=";;background:none transparent;border:none;">论</abbr></a></li><li class="nv-edit"><a class="external text" href="https://zh.wikipedia.org/w/index.php?title=Template:Data_structures&amp;action=edit"><abbr title="编辑该模板" style=";;background:none transparent;border:none;">编</abbr></a></li></ul></div><div style="font-size:110%"><a href="/wiki/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84" title="数据结构">数据结构</a></div></th></tr><tr style="height:2px"><td colspan="3"></td></tr><tr><th scope="row" class="navbox-group">类型</th><td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px"><div style="padding:0em 0.25em">
<ul><li><a href="/wiki/%E9%9B%86%E5%90%88_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)" title="集合 (计算机科学)">集合</a></li>
<li><a href="/wiki/%E5%AE%B9%E5%99%A8_(%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)" class="mw-redirect" title="容器 (数据结构)">容器</a></li></ul>
</div></td></tr><tr style="height:2px"><td colspan="3"></td></tr><tr><th scope="row" class="navbox-group"><a href="/wiki/%E6%8A%BD%E8%B1%A1%E6%95%B8%E6%93%9A%E9%A1%9E%E5%9E%8B" class="mw-redirect" title="抽象数据类型">抽象类型</a></th><td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px"><div style="padding:0em 0.25em">
<ul><li><a href="/wiki/%E5%85%B3%E8%81%94%E6%95%B0%E7%BB%84" title="关联数组">关联数组</a>
<ul><li><span class="ilh-all" data-orig-title="多重关连数组" data-lang-code="en" data-lang-name="英语" data-foreign-title="Multimap"><span class="ilh-page"><a href="/wiki/%E5%A4%9A%E9%87%8D%E9%97%9C%E9%80%A3%E6%95%B8%E7%B5%84" title="多重关连数组">多重关连数组</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英语</span><span class="ilh-colon">：</span><span class="ilh-link"><a href="https://en.wikipedia.org/wiki/Multimap" class="extiw" title="en:Multimap"><span lang="en" dir="auto">Multimap</span></a></span>）</span></span></li></ul></li>
<li><a href="/wiki/%E4%B8%B2%E5%88%97_(%E6%8A%BD%E8%B1%A1%E8%B3%87%E6%96%99%E5%9E%8B%E5%88%A5)" title="串列 (抽象资料类型)">列表</a></li>
<li><a class="mw-selflink selflink">堆栈</a></li>
<li><a href="/wiki/%E9%98%9F%E5%88%97" title="队列">队列</a>
<ul><li><a href="/wiki/%E5%8F%8C%E7%AB%AF%E9%98%9F%E5%88%97" title="双端队列">双端队列</a></li></ul></li>
<li><a href="/wiki/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97" class="mw-redirect" title="优先队列">优先队列</a>
<ul><li><a href="/wiki/%E5%8F%8C%E7%AB%AF%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97" title="双端优先队列">双端优先队列</a></li></ul></li>
<li><a href="/wiki/%E9%9B%86%E5%90%88_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)" title="集合 (计算机科学)">集合</a>
<ul><li><a href="/wiki/%E9%9B%86%E5%90%88_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)#多重集" title="集合 (计算机科学)">多重集</a></li>
<li><a href="/wiki/%E5%B9%B6%E6%9F%A5%E9%9B%86" title="并查集">并查集</a></li></ul></li>
<li><a href="/wiki/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84" title="可持久化数据结构">可持久化数据结构</a>
<ul><li><a href="/wiki/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E7%BA%BF%E6%AE%B5%E6%A0%91" title="可持久化线段树">线段树</a></li></ul></li></ul>
</div></td></tr><tr style="height:2px"><td colspan="3"></td></tr><tr><th scope="row" class="navbox-group"><a href="/wiki/%E6%95%B0%E7%BB%84" title="数组">数组</a></th><td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px"><div style="padding:0em 0.25em">
<ul><li><a href="/wiki/%E5%AD%97%E4%B8%B2" class="mw-redirect" title="字符串">字符串</a></li>
<li><a href="/wiki/%E4%BD%8D%E6%95%B0%E7%BB%84" title="位数组">位数组</a></li>
<li><a href="/wiki/%E7%92%B0%E5%BD%A2%E7%B7%A9%E8%A1%9D%E5%8D%80" title="环形缓冲器">环形缓冲器</a></li>
<li><span class="ilh-all" data-orig-title="动态数组" data-lang-code="en" data-lang-name="英语" data-foreign-title="Dynamic array"><span class="ilh-page"><a href="/w/index.php?title=%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84&amp;action=edit&amp;redlink=1" class="new" title="动态数组（页面不存在）">动态数组</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英语</span><span class="ilh-colon">：</span><span class="ilh-link"><a href="https://en.wikipedia.org/wiki/Dynamic_array" class="extiw" title="en:Dynamic array"><span lang="en" dir="auto">Dynamic array</span></a></span>）</span></span></li>
<li><a href="/wiki/%E5%93%88%E5%B8%8C%E8%A1%A8" title="哈希表">哈希表</a></li>
<li><span class="ilh-all" data-orig-title="哈希数组树" data-lang-code="en" data-lang-name="英语" data-foreign-title="Hashed array tree"><span class="ilh-page"><a href="/w/index.php?title=%E5%93%88%E5%B8%8C%E6%95%B0%E7%BB%84%E6%A0%91&amp;action=edit&amp;redlink=1" class="new" title="哈希数组树（页面不存在）">哈希数组树</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英语</span><span class="ilh-colon">：</span><span class="ilh-link"><a href="https://en.wikipedia.org/wiki/Hashed_array_tree" class="extiw" title="en:Hashed array tree"><span lang="en" dir="auto">Hashed array tree</span></a></span>）</span></span></li>
<li><a href="/wiki/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5" title="稀疏矩阵">稀疏矩阵</a></li></ul>
</div></td></tr><tr style="height:2px"><td colspan="3"></td></tr><tr><th scope="row" class="navbox-group"><span class="ilh-all" data-orig-title="链 (数据结构)" data-lang-code="en" data-lang-name="英语" data-foreign-title="Linked data structure"><span class="ilh-page"><a href="/w/index.php?title=%E9%93%BE_(%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)&amp;action=edit&amp;redlink=1" class="new" title="链 (数据结构)（页面不存在）">链</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英语</span><span class="ilh-colon">：</span><span class="ilh-link"><a href="https://en.wikipedia.org/wiki/Linked_data_structure" class="extiw" title="en:Linked data structure"><span lang="en" dir="auto">Linked data structure</span></a></span>）</span></span></th><td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px"><div style="padding:0em 0.25em">
<ul><li><span class="ilh-all" data-orig-title="关联表" data-lang-code="en" data-lang-name="英语" data-foreign-title="Association list"><span class="ilh-page"><a href="/w/index.php?title=%E5%85%B3%E8%81%94%E8%A1%A8&amp;action=edit&amp;redlink=1" class="new" title="关联表（页面不存在）">关联表</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英语</span><span class="ilh-colon">：</span><span class="ilh-link"><a href="https://en.wikipedia.org/wiki/Association_list" class="extiw" title="en:Association list"><span lang="en" dir="auto">Association list</span></a></span>）</span></span></li>
<li><a href="/wiki/%E9%93%BE%E8%A1%A8" title="链表">链表</a></li>
<li><a href="/wiki/%E8%B7%B3%E8%B7%83%E5%88%97%E8%A1%A8" title="跳跃列表">跳跃列表</a></li>
<li><span class="ilh-all" data-orig-title="松散链表" data-lang-code="en" data-lang-name="英语" data-foreign-title="Unrolled linked list"><span class="ilh-page"><a href="/w/index.php?title=%E6%9D%BE%E6%95%A3%E9%93%BE%E8%A1%A8&amp;action=edit&amp;redlink=1" class="new" title="松散链表（页面不存在）">松散链表</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英语</span><span class="ilh-colon">：</span><span class="ilh-link"><a href="https://en.wikipedia.org/wiki/Unrolled_linked_list" class="extiw" title="en:Unrolled linked list"><span lang="en" dir="auto">Unrolled linked list</span></a></span>）</span></span></li>
<li><a href="/wiki/%E5%BC%82%E6%88%96%E9%93%BE%E8%A1%A8" title="异或链表">异或链表</a></li></ul>
</div></td></tr><tr style="height:2px"><td colspan="3"></td></tr><tr><th scope="row" class="navbox-group"><a href="/wiki/%E6%A0%91_(%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)" title="树 (数据结构)">树</a></th><td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px"><div style="padding:0em 0.25em">
<ul><li><a href="/wiki/%E7%BA%BF%E6%AE%B5%E6%A0%91" class="mw-redirect" title="线段树">线段树</a></li>
<li><a href="/wiki/%E8%87%AA%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91" class="mw-redirect" title="自平衡二叉查找树">自平衡二叉查找树</a></li>
<li><a href="/wiki/B%E6%A0%91" title="B树">B树</a></li>
<li><a href="/wiki/%E4%BA%8C%E5%85%83%E6%90%9C%E5%B0%8B%E6%A8%B9" title="二叉搜索树">二叉树</a>
<ul><li><a href="/wiki/AA%E6%A0%91" title="AA树">AA树</a></li>
<li><a href="/wiki/AVL%E6%A0%91" title="AVL树">AVL树</a></li>
<li><a href="/wiki/%E7%BA%A2%E9%BB%91%E6%A0%91" title="红黑树">红黑树</a></li>
<li><a href="/wiki/%E5%B9%B3%E8%A1%A1%E6%A0%91" title="平衡树">平衡树</a></li>
<li><a href="/wiki/%E4%BC%B8%E5%B1%95%E6%A0%91" title="伸展树">伸展树</a></li>
<li><a href="/wiki/%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91" class="mw-redirect" title="二叉查找树">二叉查找树</a></li></ul></li>
<li><a href="/wiki/%E5%A0%86%E7%A9%8D" title="堆积">堆</a>
<ul><li><a href="/wiki/%E4%BA%8C%E5%8F%89%E5%A0%86" title="二叉堆">二叉堆</a></li>
<li><a href="/wiki/%E5%B7%A6%E5%81%8F%E6%A0%91" title="左偏树">左偏树</a></li>
<li><a href="/wiki/%E4%BA%8C%E9%A1%B9%E5%A0%86" title="二项堆">二项堆</a></li>
<li><a href="/wiki/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E5%A0%86" title="斐波那契堆">斐波那契堆</a></li></ul></li>
<li><a href="/wiki/R%E6%A0%91" title="R树">R树</a>
<ul><li><a href="/wiki/R*%E6%A0%91" title="R*树">R*树</a></li>
<li><a href="/wiki/R%2B%E6%A0%91" title="R+树">R+树</a></li>
<li><span class="ilh-all" data-orig-title="Hilbert R树" data-lang-code="en" data-lang-name="英语" data-foreign-title="Hilbert R-tree"><span class="ilh-page"><a href="/w/index.php?title=Hilbert_R%E6%A0%91&amp;action=edit&amp;redlink=1" class="new" title="Hilbert R树（页面不存在）">Hilbert R树</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英语</span><span class="ilh-colon">：</span><span class="ilh-link"><a href="https://en.wikipedia.org/wiki/Hilbert_R-tree" class="extiw" title="en:Hilbert R-tree"><span lang="en" dir="auto">Hilbert R-tree</span></a></span>）</span></span></li></ul></li>
<li><a href="/wiki/Trie" title="Trie">前缀树</a>
<ul><li><a href="/wiki/%E5%93%88%E5%B8%8C%E6%A0%91" title="哈希树">哈希树</a></li></ul></li></ul>
</div></td></tr><tr style="height:2px"><td colspan="3"></td></tr><tr><th scope="row" class="navbox-group"><a href="/wiki/%E5%9B%BE_(%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)" title="图 (数据结构)">图</a></th><td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px"><div style="padding:0em 0.25em">
<ul><li><a href="/wiki/%E6%9C%89%E5%90%91%E5%9B%BE" class="mw-redirect" title="有向图">有向图</a></li>
<li><a href="/wiki/%E6%9C%89%E5%90%91%E6%97%A0%E7%8E%AF%E5%9B%BE" title="有向无环图">有向无环图</a></li>
<li><a href="/wiki/%E4%BA%8C%E5%85%83%E5%86%B3%E7%AD%96%E5%9B%BE" title="二元决策图">二元决策图</a></li>
<li><a href="/wiki/%E7%84%A1%E5%90%91%E5%9C%96" class="mw-redirect" title="无向图">无向图</a></li>
<li><span class="ilh-all" data-orig-title="确定性非循环有限自动机" data-lang-code="en" data-lang-name="英语" data-foreign-title="Deterministic acyclic finite state automaton"><span class="ilh-page"><a href="/w/index.php?title=%E7%A1%AE%E5%AE%9A%E6%80%A7%E9%9D%9E%E5%BE%AA%E7%8E%AF%E6%9C%89%E9%99%90%E8%87%AA%E5%8A%A8%E6%9C%BA&amp;action=edit&amp;redlink=1" class="new" title="确定性非循环有限自动机（页面不存在）">确定性非循环有限自动机</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英语</span><span class="ilh-colon">：</span><span class="ilh-link"><a href="https://en.wikipedia.org/wiki/Deterministic_acyclic_finite_state_automaton" class="extiw" title="en:Deterministic acyclic finite state automaton"><span lang="en" dir="auto">Deterministic acyclic finite state automaton</span></a></span>）</span></span></li></ul>
</div></td></tr><tr style="height:2px"><td colspan="3"></td></tr><tr><td class="navbox-abovebelow" colspan="2"><div><a href="/wiki/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%9C%AF%E8%AF%AD%E5%88%97%E8%A1%A8" title="数据结构术语列表">数据结构术语列表</a></div></td></tr></tbody></table></td></tr></tbody></table>
<table cellspacing="0" class="navbox" style="border-spacing:0"><tbody><tr><td style="padding:2px"><table cellspacing="0" class="nowraplinks hlist navbox-inner" style="border-spacing:0;background:transparent;color:inherit"><tbody><tr><th scope="row" class="navbox-group nowrap"><a href="/wiki/Help:%E8%A7%84%E8%8C%83%E6%8E%A7%E5%88%B6" title="Help:规范控制">规范控制</a> <a href="https://www.wikidata.org/wiki/Q177929" title="编辑维基数据链接"><img alt="编辑维基数据链接" src="//upload.wikimedia.org/wikipedia/commons/thumb/8/8a/OOjs_UI_icon_edit-ltr-progressive.svg/10px-OOjs_UI_icon_edit-ltr-progressive.svg.png" decoding="async" width="10" height="10" style="vertical-align: text-top" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/8/8a/OOjs_UI_icon_edit-ltr-progressive.svg/15px-OOjs_UI_icon_edit-ltr-progressive.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/8/8a/OOjs_UI_icon_edit-ltr-progressive.svg/20px-OOjs_UI_icon_edit-ltr-progressive.svg.png 2x" data-file-width="20" data-file-height="20" /></a></th><td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px"><div style="padding:0em 0.25em">
<ul><li><span class="nowrap"><a href="/wiki/%E6%95%B4%E5%90%88%E8%A7%84%E8%8C%83%E6%96%87%E6%A1%A3" title="集成规范文档">GND</a>: <span class="uid"><a rel="nofollow" class="external text" href="https://d-nb.info/gnd/4808341-0">4808341-0</a></span></span></li></ul>
</div></td></tr></tbody></table></td></tr></tbody></table>
<!-- 
NewPP limit report
Parsed by mw1420
Cached time: 20220715130951
Cache expiry: 1814400
Reduced expiry: false
Complications: []
CPU time usage: 0.705 seconds
Real time usage: 0.952 seconds
Preprocessor visited node count: 1134/1000000
Post‐expand include size: 238565/2097152 bytes
Template argument size: 505/2097152 bytes
Highest expansion depth: 13/100
Expensive parser function count: 13/500
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 62241/5000000 bytes
Lua time usage: 0.332/10.000 seconds
Lua memory usage: 20683452/52428800 bytes
Number of Wikibase entities loaded: 1/400
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%  577.803      1 -total
 26.50%  153.097      4 Template:Lang-en
 12.63%   72.951      1 Template:Refimprove
 12.46%   71.983      1 Template:Authority_control
 12.39%   71.600      1 Template:Reflist
 12.11%   69.992      1 Template:NoteTA
 10.30%   59.495      1 Template:Ambox
  9.93%   57.387      1 Template:Cite_book
  6.20%   35.851      1 Template:各地中文名
  5.94%   34.333      1 Template:Data_structures
-->

<!-- Saved in parser cache with key zhwiki:pcache:idhash:85210-0!userlang=zh-cn!zh-cn and timestamp 20220715130950 and revision id 72272300.
 -->
</div><noscript><img src="//zh.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript>
<div class="printfooter">取自“<a dir="ltr" href="https://zh.wikipedia.org/w/index.php?title=堆栈&amp;oldid=72272300">https://zh.wikipedia.org/w/index.php?title=堆栈&amp;oldid=72272300</a>”</div></div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Special:%E9%A1%B5%E9%9D%A2%E5%88%86%E7%B1%BB" title="Special:页面分类">分类</a>：​<ul><li><a href="/wiki/Category:%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84" title="Category:数据结构">数据结构</a></li><li><a href="/wiki/Category:%E6%8A%BD%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B" title="Category:抽象数据类型">抽象数据类型</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">隐藏分类：​<ul><li><a href="/wiki/Category:%E8%87%AA2020%E5%B9%B45%E6%9C%88%E9%9C%80%E8%A1%A5%E5%85%85%E6%9D%A5%E6%BA%90%E7%9A%84%E6%9D%A1%E7%9B%AE" title="Category:自2020年5月需补充来源的条目">自2020年5月需补充来源的条目</a></li><li><a href="/wiki/Category:%E6%8B%92%E7%BB%9D%E5%BD%93%E9%80%89%E9%A6%96%E9%A1%B5%E6%96%B0%E6%9D%A1%E7%9B%AE%E6%8E%A8%E8%8D%90%E6%A0%8F%E7%9B%AE%E7%9A%84%E6%9D%A1%E7%9B%AE" title="Category:拒绝当选首页新条目推荐栏目的条目">拒绝当选首页新条目推荐栏目的条目</a></li><li><a href="/wiki/Category:%E5%90%AB%E6%9C%89%E8%8B%B1%E8%AA%9E%E7%9A%84%E6%A2%9D%E7%9B%AE" title="Category:含有英語的條目">含有英语的条目</a></li><li><a href="/wiki/Category:%E5%8C%85%E5%90%ABGND%E6%A0%87%E8%AF%86%E7%AC%A6%E7%9A%84%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91%E6%9D%A1%E7%9B%AE" title="Category:包含GND标识符的维基百科条目">包含GND标识符的维基百科条目</a></li><li><a href="/wiki/Category:%E5%B8%A6%E6%9C%89%E4%BC%AA%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B%E7%9A%84%E6%9D%A1%E7%9B%AE" title="Category:带有伪代码示例的条目">带有伪代码示例的条目</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>导航菜单</h2>
	<div id="mw-head">
		

<nav id="p-personal" class="mw-portlet mw-portlet-personal vector-user-menu-legacy vector-menu" aria-labelledby="p-personal-label" role="navigation"   lang="zh-Hans-CN" dir="ltr">
	<h3
		id="p-personal-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">个人工具</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="pt-anonuserpage" class="mw-list-item"><span title="您编辑本站所用IP的对应用户页">没有登录</span></li><li id="pt-anontalk" class="mw-list-item"><a href="/wiki/Special:%E6%88%91%E7%9A%84%E8%AE%A8%E8%AE%BA%E9%A1%B5" title="对于来自此IP地址编辑的讨论[n]" accesskey="n"><span>讨论</span></a></li><li id="pt-anoncontribs" class="mw-list-item"><a href="/wiki/Special:%E6%88%91%E7%9A%84%E8%B4%A1%E7%8C%AE" title="来自此IP地址的编辑列表[y]" accesskey="y"><span>贡献</span></a></li><li id="pt-createaccount" class="mw-list-item"><a href="/w/index.php?title=Special:%E5%88%9B%E5%BB%BA%E8%B4%A6%E6%88%B7&amp;returnto=%E5%A0%86%E6%A0%88" title="建议您创建一个账户并登录，不过这不是强制的"><span>创建账号</span></a></li><li id="pt-login" class="mw-list-item"><a href="/w/index.php?title=Special:%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95&amp;returnto=%E5%A0%86%E6%A0%88" title="建议你登录，尽管并非必须。[o]" accesskey="o"><span>登录</span></a></li></ul>
		
	</div>
</nav>

		<div id="left-navigation">
			

<nav id="p-namespaces" class="mw-portlet mw-portlet-namespaces vector-menu vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-namespaces-label" role="navigation"   lang="zh-Hans-CN" dir="ltr">
	<h3
		id="p-namespaces-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">命名空间</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected mw-list-item"><a href="/wiki/%E5%A0%86%E6%A0%88" title="浏览条目正文[c]" accesskey="c"><span>条目</span></a></li><li id="ca-talk" class="mw-list-item"><a href="/wiki/Talk:%E5%A0%86%E6%A0%88" rel="discussion" title="关于此页面的讨论[t]" accesskey="t"><span>讨论</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-variants" class="mw-portlet mw-portlet-variants vector-menu-dropdown-noicon vector-menu vector-menu-dropdown" aria-labelledby="p-variants-label" role="navigation"   lang="zh-Hans-CN" dir="ltr">
	<input type="checkbox"
		id="p-variants-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-variants"
		class="vector-menu-checkbox"
		aria-labelledby="p-variants-label"
	/>
	<label
		id="p-variants-label"
		 aria-label="更改语言变体"
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">大陆简体</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-varlang-0" class="ca-variants-zh mw-list-item"><a href="/zh/%E5%A0%86%E6%A0%88" lang="zh" hreflang="zh"><span>不转换</span></a></li><li id="ca-varlang-1" class="ca-variants-zh-Hans mw-list-item"><a href="/zh-hans/%E5%A0%86%E6%A0%88" lang="zh-Hans" hreflang="zh-Hans"><span>简体</span></a></li><li id="ca-varlang-2" class="ca-variants-zh-Hant mw-list-item"><a href="/zh-hant/%E5%A0%86%E6%A0%88" lang="zh-Hant" hreflang="zh-Hant"><span>繁體</span></a></li><li id="ca-varlang-3" class="selected ca-variants-zh-Hans-CN mw-list-item"><a href="/zh-cn/%E5%A0%86%E6%A0%88" lang="zh-Hans-CN" hreflang="zh-Hans-CN"><span>大陆简体</span></a></li><li id="ca-varlang-4" class="ca-variants-zh-Hant-HK mw-list-item"><a href="/zh-hk/%E5%A0%86%E6%A0%88" lang="zh-Hant-HK" hreflang="zh-Hant-HK"><span>香港繁體</span></a></li><li id="ca-varlang-5" class="ca-variants-zh-Hant-MO mw-list-item"><a href="/zh-mo/%E5%A0%86%E6%A0%88" lang="zh-Hant-MO" hreflang="zh-Hant-MO"><span>澳門繁體</span></a></li><li id="ca-varlang-6" class="ca-variants-zh-Hans-MY mw-list-item"><a href="/zh-my/%E5%A0%86%E6%A0%88" lang="zh-Hans-MY" hreflang="zh-Hans-MY"><span>大马简体</span></a></li><li id="ca-varlang-7" class="ca-variants-zh-Hans-SG mw-list-item"><a href="/zh-sg/%E5%A0%86%E6%A0%88" lang="zh-Hans-SG" hreflang="zh-Hans-SG"><span>新加坡简体</span></a></li><li id="ca-varlang-8" class="ca-variants-zh-Hant-TW mw-list-item"><a href="/zh-tw/%E5%A0%86%E6%A0%88" lang="zh-Hant-TW" hreflang="zh-Hant-TW"><span>臺灣正體</span></a></li></ul>
		
	</div>
</nav>

		</div>
		<div id="right-navigation">
			

<nav id="p-views" class="mw-portlet mw-portlet-views vector-menu vector-menu-tabs vector-menu-tabs-legacy" aria-labelledby="p-views-label" role="navigation"   lang="zh-Hans-CN" dir="ltr">
	<h3
		id="p-views-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">查看</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="ca-view" class="selected mw-list-item"><a href="/wiki/%E5%A0%86%E6%A0%88"><span>阅读</span></a></li><li id="ca-edit" class="mw-list-item"><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=edit" title="编辑本页[e]" accesskey="e"><span>编辑</span></a></li><li id="ca-history" class="mw-list-item"><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=history" title="本页面的早前版本。[h]" accesskey="h"><span>查看历史</span></a></li></ul>
		
	</div>
</nav>

			

<nav id="p-cactions" class="mw-portlet mw-portlet-cactions emptyPortlet vector-menu-dropdown-noicon vector-menu vector-menu-dropdown" aria-labelledby="p-cactions-label" role="navigation"  title="更多选项"  lang="zh-Hans-CN" dir="ltr">
	<input type="checkbox"
		id="p-cactions-checkbox"
		role="button"
		aria-haspopup="true"
		data-event-name="ui.dropdown-p-cactions"
		class="vector-menu-checkbox"
		aria-labelledby="p-cactions-label"
	/>
	<label
		id="p-cactions-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">更多</span>
	</label>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"></ul>
		
	</div>
</nav>

			
<div id="p-search" role="search" class="vector-search-box-vue  vector-search-box-show-thumbnail vector-search-box-auto-expand-width vector-search-box">
	<div>
			<h3  lang="zh-Hans-CN" dir="ltr">
				<label for="searchInput">搜索</label>
			</h3>
		<form action="/w/index.php" id="searchform"
			class="vector-search-box-form">
			<div id="simpleSearch"
				class="vector-search-box-inner"
				 data-search-loc="header-navigation">
				<input class="vector-search-box-input"
					 type="search" name="search" placeholder="搜索维基百科" aria-label="搜索维基百科" autocapitalize="sentences" title="搜索维基百科[f]" accesskey="f" id="searchInput"
				>
				<input type="hidden" name="title" value="Special:搜索">
				<input id="mw-searchButton"
					 class="searchButton mw-fallbackSearchButton" type="submit" name="fulltext" title="搜索含这些文字的页面" value="搜索">
				<input id="searchButton"
					 class="searchButton" type="submit" name="go" title="若相同标题存在，则直接前往该页面" value="前往">
			</div>
		</form>
	</div>
</div>

		</div>
	</div>
	

<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a class="mw-wiki-logo" href="/wiki/Wikipedia:%E9%A6%96%E9%A1%B5"
			title="首页"></a>
	</div>
	

<nav id="p-navigation" class="mw-portlet mw-portlet-navigation vector-menu vector-menu-portal portal" aria-labelledby="p-navigation-label" role="navigation"   lang="zh-Hans-CN" dir="ltr">
	<h3
		id="p-navigation-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">导航</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-mainpage-description" class="mw-list-item"><a href="/wiki/Wikipedia:%E9%A6%96%E9%A1%B5" title="访问首页[z]" accesskey="z"><span>首页</span></a></li><li id="n-indexpage" class="mw-list-item"><a href="/wiki/Wikipedia:%E5%88%86%E7%B1%BB%E7%B4%A2%E5%BC%95" title="以分类索引搜寻中文维基百科"><span>分类索引</span></a></li><li id="n-Featured_content" class="mw-list-item"><a href="/wiki/Portal:%E7%89%B9%E8%89%B2%E5%85%A7%E5%AE%B9" title="查看中文维基百科的特色内容"><span>特色内容</span></a></li><li id="n-currentevents" class="mw-list-item"><a href="/wiki/Portal:%E6%96%B0%E8%81%9E%E5%8B%95%E6%85%8B" title="提供当前新闻事件的背景资料"><span>新闻动态</span></a></li><li id="n-recentchanges" class="mw-list-item"><a href="/wiki/Special:%E6%9C%80%E8%BF%91%E6%9B%B4%E6%94%B9" title="列出维基百科中的最近修改[r]" accesskey="r"><span>最近更改</span></a></li><li id="n-randompage" class="mw-list-item"><a href="/wiki/Special:%E9%9A%8F%E6%9C%BA%E9%A1%B5%E9%9D%A2" title="随机载入一个页面[x]" accesskey="x"><span>随机条目</span></a></li><li id="n-sitesupport" class="mw-list-item"><a href="https://donate.wikimedia.org/?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=spontaneous&amp;uselang=zh-hans" title="如果您在维基百科受益良多，您可以考虑资助我们"><span>资助维基百科</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-help" class="mw-portlet mw-portlet-help vector-menu vector-menu-portal portal" aria-labelledby="p-help-label" role="navigation"   lang="zh-Hans-CN" dir="ltr">
	<h3
		id="p-help-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">帮助</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="n-help" class="mw-list-item"><a href="/wiki/Help:%E7%9B%AE%E5%BD%95" title="寻求帮助"><span>帮助</span></a></li><li id="n-portal" class="mw-list-item"><a href="/wiki/Wikipedia:%E7%A4%BE%E7%BE%A4%E9%A6%96%E9%A1%B5" title="关于本计划、你可以做什么、应该如何做"><span>维基社群</span></a></li><li id="n-policy" class="mw-list-item"><a href="/wiki/Wikipedia:%E6%96%B9%E9%87%9D%E8%88%87%E6%8C%87%E5%BC%95" title="查看维基百科的方针和指引"><span>方针与指引</span></a></li><li id="n-villagepump" class="mw-list-item"><a href="/wiki/Wikipedia:%E4%BA%92%E5%8A%A9%E5%AE%A2%E6%A0%88" title="参与维基百科社群的讨论"><span>互助客栈</span></a></li><li id="n-Information_desk" class="mw-list-item"><a href="/wiki/Wikipedia:%E7%9F%A5%E8%AF%86%E9%97%AE%E7%AD%94" title="解答任何与维基百科无关的问题的地方"><span>知识问答</span></a></li><li id="n-conversion" class="mw-list-item"><a href="/wiki/Wikipedia:%E5%AD%97%E8%AF%8D%E8%BD%AC%E6%8D%A2" title="提出字词转换请求"><span>字词转换</span></a></li><li id="n-IRC" class="mw-list-item"><a href="/wiki/Wikipedia:IRC%E8%81%8A%E5%A4%A9%E9%A2%91%E9%81%93"><span>IRC即时聊天</span></a></li><li id="n-contact" class="mw-list-item"><a href="/wiki/Wikipedia:%E8%81%94%E7%BB%9C%E6%88%91%E4%BB%AC" title="如何联络维基百科"><span>联络我们</span></a></li><li id="n-about" class="mw-list-item"><a href="/wiki/Wikipedia:%E5%85%B3%E4%BA%8E" title="查看维基百科的简介"><span>关于维基百科</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-tb" class="mw-portlet mw-portlet-tb vector-menu vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation"   lang="zh-Hans-CN" dir="ltr">
	<h3
		id="p-tb-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">工具</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere" class="mw-list-item"><a href="/wiki/Special:%E9%93%BE%E5%85%A5%E9%A1%B5%E9%9D%A2/%E5%A0%86%E6%A0%88" title="列出所有与本页相链的页面[j]" accesskey="j"><span>链入页面</span></a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="/wiki/Special:%E9%93%BE%E5%87%BA%E6%9B%B4%E6%94%B9/%E5%A0%86%E6%A0%88" rel="nofollow" title="页面链出所有页面的更改[k]" accesskey="k"><span>相关更改</span></a></li><li id="t-upload" class="mw-list-item"><a href="/wiki/Project:%E4%B8%8A%E4%BC%A0" title="上传图像或多媒体文件[u]" accesskey="u"><span>上传文件</span></a></li><li id="t-specialpages" class="mw-list-item"><a href="/wiki/Special:%E7%89%B9%E6%AE%8A%E9%A1%B5%E9%9D%A2" title="全部特殊页面的列表[q]" accesskey="q"><span>特殊页面</span></a></li><li id="t-permalink" class="mw-list-item"><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;oldid=72272300" title="本页面该版本的固定链接"><span>固定链接</span></a></li><li id="t-info" class="mw-list-item"><a href="/w/index.php?title=%E5%A0%86%E6%A0%88&amp;action=info" title="关于此页面的更多信息"><span>页面信息</span></a></li><li id="t-cite" class="mw-list-item"><a href="/w/index.php?title=Special:%E5%BC%95%E7%94%A8%E6%AD%A4%E9%A1%B5%E9%9D%A2&amp;page=%E5%A0%86%E6%A0%88&amp;id=72272300&amp;wpFormIdentifier=titleform" title="关于如何引用本页的信息"><span>引用本页</span></a></li><li id="t-wikibase" class="mw-list-item"><a href="https://www.wikidata.org/wiki/Special:EntityPage/Q177929" title="链接到连接的数据仓库项目[g]" accesskey="g"><span>维基数据项目</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-electronpdfservice-sidebar-portlet-heading" class="mw-portlet mw-portlet-electronpdfservice-sidebar-portlet-heading vector-menu vector-menu-portal portal" aria-labelledby="p-electronpdfservice-sidebar-portlet-heading-label" role="navigation"   lang="zh-Hans-CN" dir="ltr">
	<h3
		id="p-electronpdfservice-sidebar-portlet-heading-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">打印/导出</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li id="electron-print_pdf" class="mw-list-item"><a href="/w/index.php?title=Special:DownloadAsPdf&amp;page=%E5%A0%86%E6%A0%88&amp;action=show-download-screen"><span>下载为PDF</span></a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="本页面的可打印版本[p]" accesskey="p"><span>可打印版本</span></a></li></ul>
		
	</div>
</nav>


<nav id="p-wikibase-otherprojects" class="mw-portlet mw-portlet-wikibase-otherprojects vector-menu vector-menu-portal portal" aria-labelledby="p-wikibase-otherprojects-label" role="navigation"   lang="zh-Hans-CN" dir="ltr">
	<h3
		id="p-wikibase-otherprojects-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">在其他项目中</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li class="wb-otherproject-link wb-otherproject-commons mw-list-item"><a href="https://commons.wikimedia.org/wiki/Category:Stack_data_structures" hreflang="en"><span>维基共享资源</span></a></li></ul>
		
	</div>
</nav>

	

<nav id="p-lang" class="mw-portlet mw-portlet-lang vector-menu vector-menu-portal portal" aria-labelledby="p-lang-label" role="navigation"   lang="zh-Hans-CN" dir="ltr">
	<h3
		id="p-lang-label"
		
		class="vector-menu-heading "
	>
		<span class="vector-menu-heading-label">其他语言</span>
	</h3>
	<div class="vector-menu-content">
		
		<ul class="vector-menu-content-list"><li class="interlanguage-link interwiki-ar mw-list-item"><a href="https://ar.wikipedia.org/wiki/%D9%85%D9%83%D8%AF%D8%B3_(%D8%A8%D9%86%D9%8A%D8%A9_%D8%A8%D9%8A%D8%A7%D9%86%D8%A7%D8%AA)" title="مكدس (بنية بيانات) – 阿拉伯语" lang="ar" hreflang="ar" class="interlanguage-link-target"><span>العربية</span></a></li><li class="interlanguage-link interwiki-be-x-old mw-list-item"><a href="https://be-tarask.wikipedia.org/wiki/%D0%A1%D1%82%D1%8D%D0%BA" title="Стэк – Belarusian (Taraškievica orthography)" lang="be-tarask" hreflang="be-tarask" class="interlanguage-link-target"><span>Беларуская (тарашкевіца)</span></a></li><li class="interlanguage-link interwiki-bg mw-list-item"><a href="https://bg.wikipedia.org/wiki/%D0%A1%D1%82%D0%B5%D0%BA_(%D1%81%D1%82%D1%80%D1%83%D0%BA%D1%82%D1%83%D1%80%D0%B0_%D0%BE%D1%82_%D0%B4%D0%B0%D0%BD%D0%BD%D0%B8)" title="Стек (структура от данни) – 保加利亚语" lang="bg" hreflang="bg" class="interlanguage-link-target"><span>Български</span></a></li><li class="interlanguage-link interwiki-bs mw-list-item"><a href="https://bs.wikipedia.org/wiki/Stek" title="Stek – 波斯尼亚语" lang="bs" hreflang="bs" class="interlanguage-link-target"><span>Bosanski</span></a></li><li class="interlanguage-link interwiki-ca mw-list-item"><a href="https://ca.wikipedia.org/wiki/Mem%C3%B2ria_en_pila_(estructura_de_dades)" title="Memòria en pila (estructura de dades) – 加泰罗尼亚语" lang="ca" hreflang="ca" class="interlanguage-link-target"><span>Català</span></a></li><li class="interlanguage-link interwiki-cs mw-list-item"><a href="https://cs.wikipedia.org/wiki/Z%C3%A1sobn%C3%ADk_(datov%C3%A1_struktura)" title="Zásobník (datová struktura) – 捷克语" lang="cs" hreflang="cs" class="interlanguage-link-target"><span>Čeština</span></a></li><li class="interlanguage-link interwiki-da mw-list-item"><a href="https://da.wikipedia.org/wiki/Stak_(datastruktur)" title="Stak (datastruktur) – 丹麦语" lang="da" hreflang="da" class="interlanguage-link-target"><span>Dansk</span></a></li><li class="interlanguage-link interwiki-de mw-list-item"><a href="https://de.wikipedia.org/wiki/Stapelspeicher" title="Stapelspeicher – 德语" lang="de" hreflang="de" class="interlanguage-link-target"><span>Deutsch</span></a></li><li class="interlanguage-link interwiki-el mw-list-item"><a href="https://el.wikipedia.org/wiki/%CE%A3%CF%84%CE%BF%CE%AF%CE%B2%CE%B1_(%CE%B4%CE%BF%CE%BC%CE%AE_%CE%B4%CE%B5%CE%B4%CE%BF%CE%BC%CE%AD%CE%BD%CF%89%CE%BD)" title="Στοίβα (δομή δεδομένων) – 希腊语" lang="el" hreflang="el" class="interlanguage-link-target"><span>Ελληνικά</span></a></li><li class="interlanguage-link interwiki-en mw-list-item"><a href="https://en.wikipedia.org/wiki/Stack_(abstract_data_type)" title="Stack (abstract data type) – 英语" lang="en" hreflang="en" class="interlanguage-link-target"><span>English</span></a></li><li class="interlanguage-link interwiki-eo mw-list-item"><a href="https://eo.wikipedia.org/wiki/Stako_(komputado)" title="Stako (komputado) – 世界语" lang="eo" hreflang="eo" class="interlanguage-link-target"><span>Esperanto</span></a></li><li class="interlanguage-link interwiki-es mw-list-item"><a href="https://es.wikipedia.org/wiki/Pila_(inform%C3%A1tica)" title="Pila (informática) – 西班牙语" lang="es" hreflang="es" class="interlanguage-link-target"><span>Español</span></a></li><li class="interlanguage-link interwiki-et mw-list-item"><a href="https://et.wikipedia.org/wiki/Pinum%C3%A4lu" title="Pinumälu – 爱沙尼亚语" lang="et" hreflang="et" class="interlanguage-link-target"><span>Eesti</span></a></li><li class="interlanguage-link interwiki-eu mw-list-item"><a href="https://eu.wikipedia.org/wiki/Pila_(informatika)" title="Pila (informatika) – 巴斯克语" lang="eu" hreflang="eu" class="interlanguage-link-target"><span>Euskara</span></a></li><li class="interlanguage-link interwiki-fa mw-list-item"><a href="https://fa.wikipedia.org/wiki/%D9%BE%D8%B4%D8%AA%D9%87" title="پشته – 波斯语" lang="fa" hreflang="fa" class="interlanguage-link-target"><span>فارسی</span></a></li><li class="interlanguage-link interwiki-fi mw-list-item"><a href="https://fi.wikipedia.org/wiki/Pino" title="Pino – 芬兰语" lang="fi" hreflang="fi" class="interlanguage-link-target"><span>Suomi</span></a></li><li class="interlanguage-link interwiki-fr mw-list-item"><a href="https://fr.wikipedia.org/wiki/Pile_(informatique)" title="Pile (informatique) – 法语" lang="fr" hreflang="fr" class="interlanguage-link-target"><span>Français</span></a></li><li class="interlanguage-link interwiki-he mw-list-item"><a href="https://he.wikipedia.org/wiki/%D7%9E%D7%97%D7%A1%D7%A0%D7%99%D7%AA_(%D7%9E%D7%91%D7%A0%D7%94_%D7%A0%D7%AA%D7%95%D7%A0%D7%99%D7%9D)" title="מחסנית (מבנה נתונים) – 希伯来语" lang="he" hreflang="he" class="interlanguage-link-target"><span>עברית</span></a></li><li class="interlanguage-link interwiki-hi mw-list-item"><a href="https://hi.wikipedia.org/wiki/%E0%A4%A2%E0%A5%87%E0%A4%B0_(%E0%A4%B8%E0%A4%BE%E0%A4%B0_%E0%A4%9C%E0%A4%BE%E0%A4%A8%E0%A4%95%E0%A4%BE%E0%A4%B0%E0%A5%80_%E0%A4%AA%E0%A5%8D%E0%A4%B0%E0%A4%95%E0%A4%BE%E0%A4%B0)" title="ढेर (सार जानकारी प्रकार) – 印地语" lang="hi" hreflang="hi" class="interlanguage-link-target"><span>हिन्दी</span></a></li><li class="interlanguage-link interwiki-hr mw-list-item"><a href="https://hr.wikipedia.org/wiki/Stog" title="Stog – 克罗地亚语" lang="hr" hreflang="hr" class="interlanguage-link-target"><span>Hrvatski</span></a></li><li class="interlanguage-link interwiki-hu mw-list-item"><a href="https://hu.wikipedia.org/wiki/Verem_(adatszerkezet)" title="Verem (adatszerkezet) – 匈牙利语" lang="hu" hreflang="hu" class="interlanguage-link-target"><span>Magyar</span></a></li><li class="interlanguage-link interwiki-id mw-list-item"><a href="https://id.wikipedia.org/wiki/Tumpukan_(struktur_data)" title="Tumpukan (struktur data) – 印度尼西亚语" lang="id" hreflang="id" class="interlanguage-link-target"><span>Bahasa Indonesia</span></a></li><li class="interlanguage-link interwiki-is mw-list-item"><a href="https://is.wikipedia.org/wiki/Stafli_(t%C3%B6lvunarfr%C3%A6%C3%B0i)" title="Stafli (tölvunarfræði) – 冰岛语" lang="is" hreflang="is" class="interlanguage-link-target"><span>Íslenska</span></a></li><li class="interlanguage-link interwiki-it mw-list-item"><a href="https://it.wikipedia.org/wiki/Pila_(informatica)" title="Pila (informatica) – 意大利语" lang="it" hreflang="it" class="interlanguage-link-target"><span>Italiano</span></a></li><li class="interlanguage-link interwiki-ja mw-list-item"><a href="https://ja.wikipedia.org/wiki/%E3%82%B9%E3%82%BF%E3%83%83%E3%82%AF" title="スタック – 日语" lang="ja" hreflang="ja" class="interlanguage-link-target"><span>日本語</span></a></li><li class="interlanguage-link interwiki-kk mw-list-item"><a href="https://kk.wikipedia.org/wiki/%D0%A1%D1%82%D0%B5%D0%BA" title="Стек – 哈萨克语" lang="kk" hreflang="kk" class="interlanguage-link-target"><span>Қазақша</span></a></li><li class="interlanguage-link interwiki-ko mw-list-item"><a href="https://ko.wikipedia.org/wiki/%EC%8A%A4%ED%83%9D" title="스택 – 韩语" lang="ko" hreflang="ko" class="interlanguage-link-target"><span>한국어</span></a></li><li class="interlanguage-link interwiki-lb mw-list-item"><a href="https://lb.wikipedia.org/wiki/Stack_(Informatik)" title="Stack (Informatik) – 卢森堡语" lang="lb" hreflang="lb" class="interlanguage-link-target"><span>Lëtzebuergesch</span></a></li><li class="interlanguage-link interwiki-lmo mw-list-item"><a href="https://lmo.wikipedia.org/wiki/Stack_(informatega)" title="Stack (informatega) – 倫巴底文" lang="lmo" hreflang="lmo" class="interlanguage-link-target"><span>Lombard</span></a></li><li class="interlanguage-link interwiki-lt mw-list-item"><a href="https://lt.wikipedia.org/wiki/Rietuv%C4%97" title="Rietuvė – 立陶宛语" lang="lt" hreflang="lt" class="interlanguage-link-target"><span>Lietuvių</span></a></li><li class="interlanguage-link interwiki-lv mw-list-item"><a href="https://lv.wikipedia.org/wiki/Steks_(datu_strukt%C5%ABra)" title="Steks (datu struktūra) – 拉脱维亚语" lang="lv" hreflang="lv" class="interlanguage-link-target"><span>Latviešu</span></a></li><li class="interlanguage-link interwiki-ml mw-list-item"><a href="https://ml.wikipedia.org/wiki/%E0%B4%B8%E0%B5%8D%E0%B4%B1%E0%B5%8D%E0%B4%B1%E0%B4%BE%E0%B4%95%E0%B5%8D%E0%B4%95%E0%B5%8D_(%E0%B4%A1%E0%B4%BE%E0%B4%B1%E0%B5%8D%E0%B4%B1%E0%B4%BE_%E0%B4%B8%E0%B5%8D%E0%B4%9F%E0%B5%8D%E0%B4%B0%E0%B4%95%E0%B5%8D%E2%80%8C%E0%B4%9A%E0%B5%8D%E0%B4%9A%E0%B5%BC)" title="സ്റ്റാക്ക് (ഡാറ്റാ സ്ട്രക്‌ച്ചർ) – 马拉雅拉姆语" lang="ml" hreflang="ml" class="interlanguage-link-target"><span>മലയാളം</span></a></li><li class="interlanguage-link interwiki-mn mw-list-item"><a href="https://mn.wikipedia.org/wiki/%D0%A1%D1%82%D0%B5%D0%BA" title="Стек – 蒙古语" lang="mn" hreflang="mn" class="interlanguage-link-target"><span>Монгол</span></a></li><li class="interlanguage-link interwiki-nl mw-list-item"><a href="https://nl.wikipedia.org/wiki/Stack_(informatica)" title="Stack (informatica) – 荷兰语" lang="nl" hreflang="nl" class="interlanguage-link-target"><span>Nederlands</span></a></li><li class="interlanguage-link interwiki-no mw-list-item"><a href="https://no.wikipedia.org/wiki/Stakk_(datastruktur)" title="Stakk (datastruktur) – 书面挪威语" lang="nb" hreflang="nb" class="interlanguage-link-target"><span>Norsk bokmål</span></a></li><li class="interlanguage-link interwiki-pl mw-list-item"><a href="https://pl.wikipedia.org/wiki/Stos_(informatyka)" title="Stos (informatyka) – 波兰语" lang="pl" hreflang="pl" class="interlanguage-link-target"><span>Polski</span></a></li><li class="interlanguage-link interwiki-pt mw-list-item"><a href="https://pt.wikipedia.org/wiki/Pilha_(inform%C3%A1tica)" title="Pilha (informática) – 葡萄牙语" lang="pt" hreflang="pt" class="interlanguage-link-target"><span>Português</span></a></li><li class="interlanguage-link interwiki-ro mw-list-item"><a href="https://ro.wikipedia.org/wiki/Stiv%C4%83_(structur%C4%83_de_date)" title="Stivă (structură de date) – 罗马尼亚语" lang="ro" hreflang="ro" class="interlanguage-link-target"><span>Română</span></a></li><li class="interlanguage-link interwiki-ru mw-list-item"><a href="https://ru.wikipedia.org/wiki/%D0%A1%D1%82%D0%B5%D0%BA" title="Стек – 俄语" lang="ru" hreflang="ru" class="interlanguage-link-target"><span>Русский</span></a></li><li class="interlanguage-link interwiki-si mw-list-item"><a href="https://si.wikipedia.org/wiki/Stack_(abstract_data_type)" title="Stack (abstract data type) – 僧伽罗语" lang="si" hreflang="si" class="interlanguage-link-target"><span>සිංහල</span></a></li><li class="interlanguage-link interwiki-simple mw-list-item"><a href="https://simple.wikipedia.org/wiki/Stack_(data_structure)" title="Stack (data structure) – Simple English" lang="en-simple" hreflang="en-simple" class="interlanguage-link-target"><span>Simple English</span></a></li><li class="interlanguage-link interwiki-sl mw-list-item"><a href="https://sl.wikipedia.org/wiki/Sklad_(ra%C4%8Dunalni%C5%A1tvo)" title="Sklad (računalništvo) – 斯洛文尼亚语" lang="sl" hreflang="sl" class="interlanguage-link-target"><span>Slovenščina</span></a></li><li class="interlanguage-link interwiki-sq mw-list-item"><a href="https://sq.wikipedia.org/wiki/Stack_(struktura_e_t%C3%AB_dh%C3%ABnave)" title="Stack (struktura e të dhënave) – 阿尔巴尼亚语" lang="sq" hreflang="sq" class="interlanguage-link-target"><span>Shqip</span></a></li><li class="interlanguage-link interwiki-sr mw-list-item"><a href="https://sr.wikipedia.org/wiki/%D0%A1%D1%82%D0%B5%D0%BA_(%D0%B0%D0%BF%D1%81%D1%82%D1%80%D0%B0%D0%BA%D1%82%D0%BD%D0%B8_%D1%82%D0%B8%D0%BF_%D0%BF%D0%BE%D0%B4%D0%B0%D1%82%D0%B0%D0%BA%D0%B0)" title="Стек (апстрактни тип података) – 塞尔维亚语" lang="sr" hreflang="sr" class="interlanguage-link-target"><span>Српски / srpski</span></a></li><li class="interlanguage-link interwiki-sv mw-list-item"><a href="https://sv.wikipedia.org/wiki/Stack_(datastruktur)" title="Stack (datastruktur) – 瑞典语" lang="sv" hreflang="sv" class="interlanguage-link-target"><span>Svenska</span></a></li><li class="interlanguage-link interwiki-ta mw-list-item"><a href="https://ta.wikipedia.org/wiki/%E0%AE%85%E0%AE%9F%E0%AF%81%E0%AE%95%E0%AF%8D%E0%AE%95%E0%AF%81_(%E0%AE%A4%E0%AE%B0%E0%AE%B5%E0%AF%81%E0%AE%95%E0%AF%8D_%E0%AE%95%E0%AE%9F%E0%AF%8D%E0%AE%9F%E0%AE%AE%E0%AF%88%E0%AE%AA%E0%AF%8D%E0%AE%AA%E0%AF%81)" title="அடுக்கு (தரவுக் கட்டமைப்பு) – 泰米尔语" lang="ta" hreflang="ta" class="interlanguage-link-target"><span>தமிழ்</span></a></li><li class="interlanguage-link interwiki-th mw-list-item"><a href="https://th.wikipedia.org/wiki/%E0%B8%81%E0%B8%AD%E0%B8%87%E0%B8%8B%E0%B9%89%E0%B8%AD%E0%B8%99" title="กองซ้อน – 泰语" lang="th" hreflang="th" class="interlanguage-link-target"><span>ไทย</span></a></li><li class="interlanguage-link interwiki-tl mw-list-item"><a href="https://tl.wikipedia.org/wiki/Stack_(agham_pangkompyuter)" title="Stack (agham pangkompyuter) – 他加禄语" lang="tl" hreflang="tl" class="interlanguage-link-target"><span>Tagalog</span></a></li><li class="interlanguage-link interwiki-tr mw-list-item"><a href="https://tr.wikipedia.org/wiki/Y%C4%B1%C4%9F%C4%B1n_(veri_tipi)" title="Yığın (veri tipi) – 土耳其语" lang="tr" hreflang="tr" class="interlanguage-link-target"><span>Türkçe</span></a></li><li class="interlanguage-link interwiki-uk mw-list-item"><a href="https://uk.wikipedia.org/wiki/%D0%A1%D1%82%D0%B5%D0%BA" title="Стек – 乌克兰语" lang="uk" hreflang="uk" class="interlanguage-link-target"><span>Українська</span></a></li><li class="interlanguage-link interwiki-vi mw-list-item"><a href="https://vi.wikipedia.org/wiki/Ng%C4%83n_x%E1%BA%BFp" title="Ngăn xếp – 越南语" lang="vi" hreflang="vi" class="interlanguage-link-target"><span>Tiếng Việt</span></a></li><li class="interlanguage-link interwiki-zh-min-nan mw-list-item"><a href="https://zh-min-nan.wikipedia.org/wiki/Stack" title="Stack – Chinese (Min Nan)" lang="nan" hreflang="nan" class="interlanguage-link-target"><span>Bân-lâm-gú</span></a></li><li class="interlanguage-link interwiki-zh-yue mw-list-item"><a href="https://zh-yue.wikipedia.org/wiki/%E5%A0%86%E7%96%8A" title="堆疊 – Cantonese" lang="yue" hreflang="yue" class="interlanguage-link-target"><span>粵語</span></a></li></ul>
		<div class="after-portlet after-portlet-lang"><span class="wb-langlinks-edit wb-langlinks-link"><a href="https://www.wikidata.org/wiki/Special:EntityPage/Q177929#sitelinks-wikipedia" title="编辑跨语言链接" class="wbc-editpage">编辑链接</a></span></div>
	</div>
</nav>

</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo"  lang="zh-Hans-CN" dir="ltr">
	<ul id="footer-info">
	<li id="footer-info-lastmod"> 本页面最后修订于2022年6月21日 (星期二) 15:19。</li>
	<li id="footer-info-copyright">本站的全部文字在<a rel="license" href="//zh.wikipedia.org/wiki/Wikipedia:CC-BY-SA-3.0%E5%8D%8F%E8%AE%AE%E6%96%87%E6%9C%AC" title="Wikipedia:CC-BY-SA-3.0协议文本">知识共享 署名-相同方式共享 3.0协议</a><a rel="license" href="//creativecommons.org/licenses/by-sa/3.0/deed.zh" style="display:none;"></a>之条款下提供，附加条款亦可能应用。（请参阅<a href="//foundation.wikimedia.org/wiki/Terms_of_Use">使用条款</a>）<br />
Wikipedia&reg;和维基百科标志是<a href="//wikimediafoundation.org">维基媒体基金会</a>的注册商标；维基&trade;是维基媒体基金会的商标。<br />
维基媒体基金会是按美国国内税收法501(c)(3)登记的<a href="//donate.wikimedia.org/wiki/Tax_deductibility">非营利慈善机构</a>。<br /></li>
</ul>

	<ul id="footer-places">
	<li id="footer-places-privacy"><a href="https://foundation.wikimedia.org/wiki/Privacy_policy" class="extiw" title="wmf:Privacy policy">隐私政策</a></li>
	<li id="footer-places-about"><a href="/wiki/Wikipedia:%E5%85%B3%E4%BA%8E" title="Wikipedia:关于">关于维基百科</a></li>
	<li id="footer-places-disclaimer"><a href="/wiki/Wikipedia:%E5%85%8D%E8%B4%A3%E5%A3%B0%E6%98%8E" title="Wikipedia:免责声明">免责声明</a></li>
	<li id="footer-places-mobileview"><a href="//zh.m.wikipedia.org/w/index.php?title=%E5%A0%86%E6%A0%88&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">手机版视图</a></li>
	<li id="footer-places-developers"><a href="https://developer.wikimedia.org">开发者</a></li>
	<li id="footer-places-statslink"><a href="https://stats.wikimedia.org/#/zh.wikipedia.org">统计</a></li>
	<li id="footer-places-cookiestatement"><a href="https://foundation.wikimedia.org/wiki/Cookie_statement">Cookie声明</a></li>
</ul>

	<ul id="footer-icons" class="noprint">
	<li id="footer-copyrightico"><a href="https://wikimediafoundation.org/"><img src="/static/images/footer/wikimedia-button.png" srcset="/static/images/footer/wikimedia-button-1.5x.png 1.5x, /static/images/footer/wikimedia-button-2x.png 2x" width="88" height="31" alt="Wikimedia Foundation" loading="lazy" /></a></li>
	<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="/static/images/footer/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/static/images/footer/poweredby_mediawiki_132x47.png 1.5x, /static/images/footer/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
</ul>

</footer>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.705","walltime":"0.952","ppvisitednodes":{"value":1134,"limit":1000000},"postexpandincludesize":{"value":238565,"limit":2097152},"templateargumentsize":{"value":505,"limit":2097152},"expansiondepth":{"value":13,"limit":100},"expensivefunctioncount":{"value":13,"limit":500},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":62241,"limit":5000000},"entityaccesscount":{"value":1,"limit":400},"timingprofile":["100.00%  577.803      1 -total"," 26.50%  153.097      4 Template:Lang-en"," 12.63%   72.951      1 Template:Refimprove"," 12.46%   71.983      1 Template:Authority_control"," 12.39%   71.600      1 Template:Reflist"," 12.11%   69.992      1 Template:NoteTA"," 10.30%   59.495      1 Template:Ambox","  9.93%   57.387      1 Template:Cite_book","  6.20%   35.851      1 Template:各地中文名","  5.94%   34.333      1 Template:Data_structures"]},"scribunto":{"limitreport-timeusage":{"value":"0.332","limit":"10.000"},"limitreport-memusage":{"value":20683452,"limit":52428800}},"cachereport":{"origin":"mw1420","timestamp":"20220715130951","ttl":1814400,"transientcontent":false}}});});</script>
<script type="application/ld+json">{"@context":"https:\/\/schema.org","@type":"Article","name":"\u5806\u6808","url":"https:\/\/zh.wikipedia.org\/wiki\/%E5%A0%86%E6%A0%88","sameAs":"http:\/\/www.wikidata.org\/entity\/Q177929","mainEntity":"http:\/\/www.wikidata.org\/entity\/Q177929","author":{"@type":"Organization","name":"\u7ef4\u57fa\u5a92\u4f53\u9879\u76ee\u8d21\u732e\u8005"},"publisher":{"@type":"Organization","name":"Wikimedia Foundation, Inc.","logo":{"@type":"ImageObject","url":"https:\/\/www.wikimedia.org\/static\/images\/wmf-hor-googpub.png"}},"datePublished":"2005-03-17T07:23:36Z","dateModified":"2022-06-21T15:19:22Z","image":"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/2\/29\/Data_stack.svg","headline":"\u62bd\u8c61\u6570\u636e\u7c7b\u578b"}</script><script type="application/ld+json">{"@context":"https:\/\/schema.org","@type":"Article","name":"\u5806\u6808","url":"https:\/\/zh.wikipedia.org\/wiki\/%E5%A0%86%E6%A0%88","sameAs":"http:\/\/www.wikidata.org\/entity\/Q177929","mainEntity":"http:\/\/www.wikidata.org\/entity\/Q177929","author":{"@type":"Organization","name":"\u7ef4\u57fa\u5a92\u4f53\u9879\u76ee\u8d21\u732e\u8005"},"publisher":{"@type":"Organization","name":"Wikimedia Foundation, Inc.","logo":{"@type":"ImageObject","url":"https:\/\/www.wikimedia.org\/static\/images\/wmf-hor-googpub.png"}},"datePublished":"2005-03-17T07:23:36Z","dateModified":"2022-06-21T15:19:22Z","image":"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/2\/29\/Data_stack.svg","headline":"\u62bd\u8c61\u6570\u636e\u7c7b\u578b"}</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":205,"wgHostname":"mw1350"});});</script>
</body>
</html>